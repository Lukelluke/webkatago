{"version":3,"sources":["GoBoard.js","GoPosition.js","Gtp.js","GoBoardController.js","serviceWorker.js","index.js"],"names":["GoIntersectionState","Object","classCallCheck","this","stone","number","winrate","playouts","backgroundColor","borderWidth","borderColor","range","start","end","result","i","push","GoBoard","x","y","props","w","_this","intersection","intersections","index","react_default","a","createElement","GoBoard_GoIntersection","key","concat","onClick","onClickIntersection","onMouseEnter","onMouseEnterIntersection","onMouseLeave","onMouseLeaveIntersection","_this2","goBoardStyle","width","height","className","style","parseInt","h","map","renderIntersection","React","Component","GoIntersection","url","intersectionStyle","color","backgroundImage","PureComponent","PASS","EMPTY","BLACK","WHITE","opponentOf","moveToXy","s","offset","charCodeAt","Marker","boardSize","BOARD_SIZE","BOARD_SIZE2","value","marks","Int32Array","point","HANDICAPS","GoPosition","handicap","_this$state","state","defineProperty","Float32Array","recent8","marker1","marker2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","xy","setState","xyToPoint","err","return","turn","ko","source","set","sgf","_jssgf$fastParse","jssgf","fastParse","root","slicedToArray","p","SZ","node","_children","length","move","B","W","play","apply","string","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","points","e","opponent","captives","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","adjacenciesAt","pt","getState","stringAt","liberties","removeString","GoString","clear","mark","isMarked","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","opponents","unshift","pop","putRecent8","switchTurn","captureBy","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","undoPlay","Math","floor","pointToXy","_i","_arr","_i2","_arr2","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","o","os","escape","ss","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","tryToCapture","canEscape","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","adjacencies","every","stack","arguments","likeEye","numBadDiagonal","allowableBadDiagonal","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","diagonalsAt","d","indexOf","isEyeOfTurn","Gtp","inputDom","document","getElementById","outputDom","addEventListener","event","process","currentTarget","str","command","dispatchEvent","CustomEvent","Promise","res","rej","getAttribute","LzAnalyzeHandler","resolve","reject","_command","interval","handler","line","startsWith","parseLzAnalyze","match","regex","exec","split","coord2xy","coord","c","slice","xy2coord","HSVtoRGB","v","r","g","b","f","q","t","round","RGBtoHSV","max","min","darker","board2intersections","board","Array","GoBoardController","size","byoyomi","gtp","model","candidates","candidate","render","console","log","lzAnalyze","variationIntersections","addCandidatesInfo","_context","t0","includes","ReactDOM","src_GoBoard_0","maxPlayouts","toConsumableArray","maxWinrate","greenHue","cyanHue","entries","_ref3","_ref2","toFixed","percentPlayouts","logPlayouts","hue","alpha","borderCoor","_this3","info","find","position","copy","first","textColor","Boolean","window","location","hostname","SharedArrayBuffer","goBoardController","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kSAGaA,SACT,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACXG,KAAKC,MAAQ,KACbD,KAAKE,OAAS,KACdF,KAAKG,QAAU,KACfH,KAAKI,SAAW,KAChBJ,KAAKK,gBAAkB,KACvBL,KAAKM,YAAc,KACnBN,KAAKO,YAAc,OAI3B,SAASC,EAAMC,EAAOC,GAClB,IAAMC,EAAS,GACf,GAAIF,GAASC,EACT,IAAK,IAAIE,EAAIH,EAAOG,GAAKF,EAAKE,IAC1BD,EAAOE,KAAKD,QAGhB,IAAK,IAAIA,EAAIH,EAAOG,GAAKF,EAAKE,IAC1BD,EAAOE,KAAKD,GAGpB,OAAOD,MAGLG,gLACIC,EAAGC,GACL,OAAOhB,KAAKiB,MAAMC,GAAKF,EAAI,GAAKD,EAAI,6CAOrBA,EAAGC,GAAG,IAAAG,EAAAnB,KACfoB,EAAepB,KAAKiB,MAAMI,cAAcrB,KAAKsB,MAAMP,EAAGC,IAC5D,OACIO,EAAAC,EAAAC,cAACC,EAAD,CACIC,IAAG,GAAAC,OAAKb,EAAL,KAAAa,OAAUZ,GACba,QAAS,kBAAMV,EAAKF,MAAMa,oBAAoBf,EAAGC,IACjDe,aAAc,kBAAMZ,EAAKF,MAAMe,yBAAyBjB,EAAGC,IAC3DiB,aAAc,kBAAMd,EAAKF,MAAMiB,yBAAyBnB,EAAGC,IAC3Df,MAAOmB,EAAanB,MACpBC,OAAQkB,EAAalB,OACrBC,QAASiB,EAAajB,QACtBC,SAAUgB,EAAahB,SACvBC,gBAAiBe,EAAaf,gBAC9BE,YAAaa,EAAab,+CAK7B,IAAA4B,EAAAnC,KACCoC,EAAe,CACjBC,MAAOrC,KAAKiB,MAAMoB,MAClBC,OAAQtC,KAAKiB,MAAMqB,QAEvB,OACIf,EAAAC,EAAAC,cAAA,OAAKc,UAAU,WAAWC,MAAOJ,GACjCb,EAAAC,EAAAC,cAAA,OAAKc,UAAU,oBACV/B,EAAMiC,SAASzC,KAAKiB,MAAMyB,GAAI,GAAGC,IAAI,SAAA3B,GAAC,OACnCO,EAAAC,EAAAC,cAAA,OAAKc,UAAU,SAASZ,IAAKX,GACxBR,EAAM,EAAGiC,SAASN,EAAKlB,MAAMC,IAAIyB,IAAI,SAAA5B,GAAC,OAAIoB,EAAKS,mBAAmB7B,EAAGC,iBArCxE6B,IAAMC,WA8CtBC,mLAEE,IAAIC,EACJ,OAAQhD,KAAKiB,MAAMhB,OACf,IAAK,IACL+C,EAAM,2FACN,MACA,IAAK,IACLA,EAAM,0FACN,MACA,QACAA,EAAM,KAEV,IAAMC,EAAoB,CACtBC,MAA4B,MAArBlD,KAAKiB,MAAMhB,MAAgB,QAAU,QAC5CkD,gBAAiBH,EACjB3C,gBAAiBL,KAAKiB,MAAMZ,gBAC5BC,YAAaN,KAAKiB,MAAMX,YACxBC,YAAaP,KAAKiB,MAAMV,aAE5B,OACIgB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,kBAAkBC,MAAOS,EAAmBpB,QAAS7B,KAAKiB,MAAMY,QAASE,aAAc/B,KAAKiB,MAAMc,aAAcE,aAAcjC,KAAKiB,MAAMgB,cACpJV,EAAAC,EAAAC,cAAA,OAAKc,UAAU,0BAA0BvC,KAAKiB,MAAMf,QACpDqB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,wBACXhB,EAAAC,EAAAC,cAAA,WAAMzB,KAAKiB,MAAMd,SACjBoB,EAAAC,EAAAC,cAAA,WAAMzB,KAAKiB,MAAMb,mBAzBPyC,IAAMO,eAgCrBtC,WCvGFuC,GAAQ,EACRC,EAAQ,EACRC,EAAQ,EACRC,EAAQ,EAEd,SAASC,EAAWP,GACvB,OAAQA,GACJ,KAAKK,EACD,OAAOC,EACX,KAAKA,EACD,OAAOD,EACX,QACI,OAAOD,GAInB,SAASI,EAASC,GACd,GAAU,KAANA,EACA,OAAON,EAEX,IAAMO,EAAS,IAAIC,WAAW,GAAK,EACnC,MAAO,CAACF,EAAEE,WAAW,GAAKD,EAAQD,EAAEE,WAAW,GAAKD,OAIlDE,aACF,SAAAA,EAAYC,GAAYjE,OAAAC,EAAA,EAAAD,CAAAE,KAAA8D,GACpB9D,KAAKgE,WAAaD,EAClB/D,KAAKiE,YAAcF,EAAYA,EAC/B/D,KAAKkE,MAAQ,EACblE,KAAKmE,MAAQ,IAAIC,WAAWpE,KAAKiE,iEAIjCjE,KAAKkE,OAAS,mCAGTG,GACL,OAAOrE,KAAKmE,MAAME,KAAWrE,KAAKkE,mCAGjCG,GACDrE,KAAKmE,MAAME,GAASrE,KAAKkE,eAI3BI,EAAY,CACd,GACA,GACA,CAAC,CAAC,GAAI,GAAI,CAAC,EAAG,KACd,CAAC,CAAC,GAAI,GAAI,CAAC,EAAG,IAAK,CAAC,GAAI,KACxB,CAAC,CAAC,GAAI,GAAI,CAAC,EAAG,IAAK,CAAC,GAAI,IAAK,CAAC,EAAG,IACjC,CAAC,CAAC,GAAI,GAAI,CAAC,EAAG,IAAK,CAAC,GAAI,IAAK,CAAC,EAAG,GAAI,CAAC,GAAI,KAC1C,CAAC,CAAC,GAAI,GAAI,CAAC,EAAG,IAAK,CAAC,GAAI,IAAK,CAAC,EAAG,GAAI,CAAC,GAAI,IAAK,CAAC,EAAG,KACnD,CAAC,CAAC,GAAI,GAAI,CAAC,EAAG,IAAK,CAAC,GAAI,IAAK,CAAC,EAAG,GAAI,CAAC,GAAI,IAAK,CAAC,EAAG,IAAK,CAAC,GAAI,KAC7D,CAAC,CAAC,GAAI,GAAI,CAAC,EAAG,IAAK,CAAC,GAAI,IAAK,CAAC,EAAG,GAAI,CAAC,GAAI,IAAK,CAAC,EAAG,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,KACtE,CAAC,CAAC,GAAI,GAAI,CAAC,EAAG,IAAK,CAAC,GAAI,IAAK,CAAC,EAAG,GAAI,CAAC,GAAI,IAAK,CAAC,EAAG,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,MAI9EC,aA6BF,SAAAA,EAAYR,EAAWS,GAAU,IAAAC,EAU7B,GAV6B3E,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,GAC7BvE,KAAKgE,WAAaD,EAClB/D,KAAKiE,YAAcF,EAAYA,EAC/B/D,KAAK0E,OAALD,EAAA,GAAA3E,OAAA6E,EAAA,EAAA7E,CAAA2E,EACKlB,EAAQ,IAAIqB,aAAa5E,KAAKiE,cADnCnE,OAAA6E,EAAA,EAAA7E,CAAA2E,EAEKjB,EAAQ,IAAIoB,aAAa5E,KAAKiE,cAFnCQ,GAIAzE,KAAK6E,QAAU,GACf7E,KAAK8E,QAAU,IAAIhB,EAAOC,GAC1B/D,KAAK+E,QAAU,IAAIjB,EAAOC,GACtBS,EAAW,EAAG,KAAAQ,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACd,QAAAC,EAAAC,EAAiBf,EAAUE,GAA3Bc,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAsC,KAA3BU,EAA2BN,EAAAlB,MAClClE,KAAK2F,SAAS3F,KAAK4F,UAAUF,EAAG,GAAIA,EAAG,IAAKnC,IAFlC,MAAAsC,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAIdlF,KAAK+F,KAAOvC,OAEZxD,KAAK+F,KAAOxC,EAEhBvD,KAAKgG,GAAK,2DA9CFC,GACR,IAAMtF,EAAS,IAAI4D,EAAW0B,EAAOjC,WAAY,GAKjD,OAJArD,EAAO+D,MAAMnB,GAAO2C,IAAID,EAAOvB,MAAMnB,IACrC5C,EAAO+D,MAAMlB,GAAO0C,IAAID,EAAOvB,MAAMlB,IACrC7C,EAAOoF,KAAOE,EAAOF,KACrBpF,EAAOqF,GAAKC,EAAOD,GACZrF,kCAGIwF,GAIX,IAJgB,IAAAC,EACDC,MAAMC,UAAUH,GAAxBI,EADSzG,OAAA0G,EAAA,EAAA1G,CAAAsG,EAAA,MAEVK,EAAI,IAAIzG,KAAKyC,SAAS8D,EAAKG,IAAM,OACnCC,EAAOJ,EACJI,EAAKC,UAAUC,OAAS,GAAG,CAE9B,IAAIC,OAAI,EACR,GAAc,OAFdH,EAAOA,EAAKC,UAAU,IAEbG,EACLD,EAAOH,EAAKI,MACT,IAAc,MAAVJ,EAAKK,EAGZ,SAFAF,EAAOH,EAAKK,EAIhBP,EAAEQ,KAAKR,EAAEb,UAAUsB,MAAMT,EAAG/C,EAASoD,KAEzC,OAAOL,sDAyBP,OAAOhD,EAAWzD,KAAK+F,2CAIvB/F,KAAK+F,KAAOtC,EAAWzD,KAAK+F,uCAGvB1B,GACL,OAAiC,IAA7BrE,KAAK0E,MAAMnB,GAAOc,GACXd,EAEsB,IAA7BvD,KAAK0E,MAAMlB,GAAOa,GACXb,EAEJF,mCAGFe,EAAOnB,GACRA,IAAUI,GACVtD,KAAK0E,MAAMnB,GAAOc,GAAS,EAC3BrE,KAAK0E,MAAMlB,GAAOa,GAAS,GAE3BrE,KAAK0E,MAAMxB,GAAOmB,GAAS,uCAItB8C,GAAQ,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAnC,EAAA,IACjB,QAAAoC,EAAAC,EAAgBL,EAAOM,OAAvBnC,OAAAC,cAAA6B,GAAAG,EAAAC,EAAAhC,QAAAC,MAAA2B,GAAA,EAA+B,KAApBM,EAAoBH,EAAArD,MAC3BlE,KAAK2F,SAAS+B,EAAGpE,IAFJ,MAAAuC,GAAAwB,GAAA,EAAAC,EAAAzB,EAAA,YAAAuB,GAAA,MAAAI,EAAA1B,QAAA0B,EAAA1B,SAAA,WAAAuB,EAAA,MAAAC,sCAMXjD,GACN,IAAMsD,EAAW3H,KAAK2H,WAChBC,EAAW,GAFJC,GAAA,EAAAC,GAAA,EAAAC,OAAA5C,EAAA,IAGb,QAAA6C,EAAAC,EAAiBjI,KAAKkI,cAAc7D,GAApCiB,OAAAC,cAAAsC,GAAAG,EAAAC,EAAAzC,QAAAC,MAAAoC,GAAA,EAA4C,KAAjCM,EAAiCH,EAAA9D,MACxC,GAAIlE,KAAKoI,SAASD,KAAQR,EAAU,CAChC,IAAMR,EAASnH,KAAKqI,SAASF,GACG,IAA5BhB,EAAOmB,UAAUzB,SACjB7G,KAAKuI,aAAapB,GAClBS,EAAS/G,KAAKqG,MAAMU,EAAUT,EAAOM,WARpC,MAAA5B,GAAAiC,GAAA,EAAAC,EAAAlC,EAAA,YAAAgC,GAAA,MAAAI,EAAAnC,QAAAmC,EAAAnC,SAAA,WAAAgC,EAAA,MAAAC,GAYb,OAAOH,mCAGFvD,GACL,IAAMnB,EAAQlD,KAAKoI,SAAS/D,GAC5B,GAAInB,IAAUI,EACV,OAAO,KAEX,IAAMqE,EAAWlE,EAAWP,GACtBiE,EAAS,IAAIqB,EAEnBxI,KAAK8E,QAAQ2D,QACbzI,KAAK+E,QAAQ0D,QACbtB,EAAOM,OAAO5G,KAAKwD,GACnBrE,KAAK+E,QAAQ2D,KAAKrE,GAClB,IAAK,IAAI/C,EAAQ,EAAGA,EAAQ6F,EAAOM,OAAOZ,OAAQvF,IAAS,CACvD,IAAM6G,EAAKhB,EAAOM,OAAOnG,GACzB,IAAKtB,KAAK8E,QAAQ6D,SAASR,GAAK,CAC5BnI,KAAK8E,QAAQ4D,KAAKP,GADU,IAAAS,GAAA,EAAAC,GAAA,EAAAC,OAAA3D,EAAA,IAE5B,QAAA4D,EAAAC,EAAgBhJ,KAAKkI,cAAcC,GAAnC7C,OAAAC,cAAAqD,GAAAG,EAAAC,EAAAxD,QAAAC,MAAAmD,GAAA,EAAwC,KAA7BpH,EAA6BuH,EAAA7E,MACpC,IAAKlE,KAAK8E,QAAQ6D,SAASnH,GAAI,CAC3B,IAAMkD,EAAQ1E,KAAKoI,SAAS5G,GACxBkD,IAAUxB,EACLlD,KAAK+E,QAAQ4D,SAASnH,KACvB2F,EAAOM,OAAO5G,KAAKW,GACnBxB,KAAK+E,QAAQ2D,KAAKlH,KAGtBxB,KAAK8E,QAAQ4D,KAAKlH,GACdkD,IAAUiD,EACVR,EAAO8B,UAAUpI,KAAKW,GAEtB2F,EAAOmB,UAAUzH,KAAKW,MAfV,MAAAqE,GAAAgD,GAAA,EAAAC,EAAAjD,EAAA,YAAA+C,GAAA,MAAAI,EAAAlD,QAAAkD,EAAAlD,SAAA,WAAA+C,EAAA,MAAAC,KAsBpC,OAAO3B,qCAGA9C,GACPrE,KAAK6E,QAAQqE,QAAQ7E,GACjBrE,KAAK6E,QAAQgC,OAAS,GACtB7G,KAAK6E,QAAQsE,mCAIhB9E,GACD,GAAIA,IAAUhB,EAGV,OAFArD,KAAKoJ,WAAW/E,GAChBrE,KAAKqJ,aACE,CACHtD,KAAM/F,KAAK+F,KACX1B,QACA2B,GAAIhG,KAAKgG,GACT4B,SAAU,IAGlB,GAAIvD,IAAUrE,KAAKgG,IAAMhG,KAAKoI,SAAS/D,KAAWf,EAC9C,OAAO,KAEXtD,KAAK2F,SAAStB,EAAOrE,KAAK+F,MAE1B,IAAM6B,EAAW5H,KAAKsJ,UAAUjF,GAC1B8C,EAASnH,KAAKqI,SAAShE,GACvBiE,EAAYnB,EAAOmB,UAAUzB,OACnC,GAAkB,IAAdyB,EAEA,OADAtI,KAAK2F,SAAStB,EAAOf,GACd,KAEX,IAAM0C,EAAKhG,KAAKgG,GACQ,IAApB4B,EAASf,QAA8B,IAAdyB,GAA4C,IAAzBnB,EAAOM,OAAOZ,OAC1D7G,KAAKgG,GAAKmB,EAAOmB,UAAU,GAE3BtI,KAAKgG,GAAK,KAEdhG,KAAKoJ,WAAW/E,GAChB,IAAM0B,EAAO/F,KAAK+F,KAElB,OADA/F,KAAKqJ,aACE,CAAEtD,OAAM1B,QAAO2B,KAAI4B,WAAUT,2CAG/BL,GAGL,GAFA9G,KAAKgG,GAAKc,EAAKd,GACfhG,KAAKqJ,aACDvC,EAAKzC,QAAUhB,EAAnB,CAGArD,KAAK2F,SAASmB,EAAKzC,MAAOf,GAC1B,IAAMqE,EAAWlE,EAAWqD,EAAKf,MAPtBwD,GAAA,EAAAC,GAAA,EAAAC,OAAAtE,EAAA,IAQX,QAAAuE,EAAAC,EAAgB7C,EAAKc,SAArBtC,OAAAC,cAAAgE,GAAAG,EAAAC,EAAAnE,QAAAC,MAAA8D,GAAA,EAA+B,KAApB9C,EAAoBiD,EAAAxF,MAC3BlE,KAAK2F,SAASc,EAAGkB,IATV,MAAA9B,GAAA2D,GAAA,EAAAC,EAAA5D,EAAA,YAAA0D,GAAA,MAAAI,EAAA7D,QAAA6D,EAAA7D,SAAA,WAAA0D,EAAA,MAAAC,qCAaPpF,GACJ,IAAMyC,EAAO9G,KAAKiH,KAAK5C,GACvB,QAAIyC,IACA9G,KAAK4J,SAAS9C,IACP,qCAKL/F,EAAGC,GACT,OAAQD,EAAI,GAAMC,EAAI,GAAKhB,KAAKgE,6CAG1BK,GACN,IAAMrD,EAAI6I,KAAKC,MAAMzF,EAAQrE,KAAKgE,YAElC,MAAO,CADGK,EAAQrD,EAAIhB,KAAKgE,WACf,EAAGhD,EAAI,yCAGTqD,GAGV,IAFA,IAAMqB,EAAK1F,KAAK+J,UAAU1F,GACpB1D,EAAS,GACfqJ,EAAA,EAAAC,EAAgB,CAAC,CAAC,GAAI,GAAI,EAAE,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAA/CD,EAAAC,EAAApD,OAAAmD,IAAoD,CAA/C,IAAMtC,EAACuC,EAAAD,GACFjJ,EAAI2E,EAAG,GAAKgC,EAAE,GACd1G,EAAI0E,EAAG,GAAKgC,EAAE,GAChB3G,GAAK,GAAKA,GAAKf,KAAKgE,YAAchD,GAAK,GAAKA,GAAKhB,KAAKgE,YACtDrD,EAAOE,KAAKb,KAAK4F,UAAU7E,EAAGC,IAGtC,OAAOL,sCAGC0D,GAGR,IAFA,IAAMqB,EAAK1F,KAAK+J,UAAU1F,GACpB1D,EAAS,GACfuJ,EAAA,EAAAC,EAAgB,CAAC,EAAE,GAAI,GAAI,EAAE,EAAG,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,IAAlDD,EAAAC,EAAAtD,OAAAqD,IAAuD,CAAlD,IAAMxC,EAACyC,EAAAD,GACFnJ,EAAI2E,EAAG,GAAKgC,EAAE,GACd1G,EAAI0E,EAAG,GAAKgC,EAAE,GAChB3G,GAAK,GAAKA,GAAKf,KAAKgE,YAAchD,GAAK,GAAKA,GAAKhB,KAAKgE,YACtDrD,EAAOE,KAAKb,KAAK4F,UAAU7E,EAAGC,IAGtC,OAAOL,oCAGDwG,GACN,GAAIA,EAAOmB,UAAUzB,OAAS,EAC1B,OAAO,EAFG,IAAAuD,GAAA,EAAAC,GAAA,EAAAC,OAAAnF,EAAA,IAId,QAAAoF,EAAAC,EAAgBrD,EAAO8B,UAAvB3D,OAAAC,cAAA6E,GAAAG,EAAAC,EAAAhF,QAAAC,MAAA2E,GAAA,EAAkC,KAAvBK,EAAuBF,EAAArG,MACxBwG,EAAK1K,KAAKqI,SAASoC,GACzB,GAA4B,IAAxBC,EAAGpC,UAAUzB,OAAc,CAC3B,IAAM8D,EAAS3K,KAAKiH,KAAKyD,EAAGpC,UAAU,IACtC,IAAKqC,EACD,SAEJ,IAAMC,EAAK5K,KAAKqI,SAASlB,EAAOM,OAAO,IACvC,GAA4B,IAAxBmD,EAAGtC,UAAUzB,OAAc,KAAAgE,GAAA,EAAAC,GAAA,EAAAC,OAAA5F,EAAA,IAC3B,QAAA6F,EAAAC,EAAgBL,EAAGtC,UAAnBhD,OAAAC,cAAAsF,GAAAG,EAAAC,EAAAzF,QAAAC,MAAAoF,GAAA,EAA8B,KAAnBJ,EAAmBO,EAAA9G,MACpBgH,EAAelL,KAAKiH,KAAKwD,GAC/B,GAAKS,EAAL,CAGA,IAAMvK,EAASX,KAAKmL,UAAUnL,KAAKqI,SAASuC,EAAGnD,OAAO,KAEtD,GADAzH,KAAK4J,SAASsB,IACTvK,EAED,OADAX,KAAK4J,SAASe,IACP,IAVY,MAAA9E,GAAAiF,GAAA,EAAAC,EAAAlF,EAAA,YAAAgF,GAAA,MAAAI,EAAAnF,QAAAmF,EAAAnF,SAAA,WAAAgF,EAAA,MAAAC,GAc3B,OADA/K,KAAK4J,SAASe,IACP,EAGP,OADA3K,KAAK4J,SAASe,GACPC,EAAGtC,UAAUzB,OAAS,IA7B3B,MAAAhB,GAAAwE,GAAA,EAAAC,EAAAzE,EAAA,YAAAuE,GAAA,MAAAI,EAAA1E,QAAA0E,EAAA1E,SAAA,WAAAuE,EAAA,MAAAC,GAiCd,IAAMK,EAAS3K,KAAKiH,KAAKE,EAAOmB,UAAU,IAC1C,IAAKqC,EACD,OAAO,EAEX,GAAuC,IAAnCA,EAAOxD,OAAOmB,UAAUzB,OAAc,KAAAuE,GAAA,EAAAC,GAAA,EAAAC,OAAAnG,EAAA,IACtC,QAAAoG,EAAAC,EAAgBb,EAAOxD,OAAOmB,UAA9BhD,OAAAC,cAAA6F,GAAAG,EAAAC,EAAAhG,QAAAC,MAAA2F,GAAA,EAAyC,KAA9BX,EAA8Bc,EAAArH,MAC/BgH,EAAelL,KAAKiH,KAAKwD,GAC/B,GAAKS,EAAL,CAGA,IAAMN,EAAK5K,KAAKqI,SAASlB,EAAOM,OAAO,IACjC9G,EAASX,KAAKmL,UAAUP,GAE9B,GADA5K,KAAK4J,SAASsB,IACTvK,EAED,OADAX,KAAK4J,SAASe,IACP,IAXuB,MAAA9E,GAAAwF,GAAA,EAAAC,EAAAzF,EAAA,YAAAuF,GAAA,MAAAI,EAAA1F,QAAA0F,EAAA1F,SAAA,WAAAuF,EAAA,MAAAC,GAetC,OADAtL,KAAK4J,SAASe,IACP,EAGP,OADA3K,KAAK4J,SAASe,GAC4B,IAAnCA,EAAOxD,OAAOmB,UAAUzB,uCAI/BxC,GAAO,IAAAlD,EAAAnB,KACX,GAAIA,KAAKoI,SAAS/D,KAAWf,EACzB,OAAO,EAEX,IAAMmI,EAAczL,KAAKkI,cAAc7D,GACvC,QAAKoH,EAAYC,MAAM,SAAAjF,GAAC,OAAItF,EAAKiH,SAAS3B,KAAOtF,EAAK4E,QAG/C0F,EAAYC,MAAM,SAAAjF,GAAC,OAAItF,EAAKkH,SAAS5B,GAAG6B,UAAUzB,OAAS,wCAG1DxC,GAAiB,IAAVsH,EAAUC,UAAA/E,OAAA,QAAA1B,IAAAyG,UAAA,GAAAA,UAAA,GAAJ,GACrB,IAAK5L,KAAK6L,QAAQxH,GACd,OAAO,EAEX,IAAIyH,EAAiB,EACfC,EAA4D,IAArC/L,KAAKkI,cAAc7D,GAAOwC,OAAe,EAAI,EAEpEc,EAAWlE,EAAWzD,KAAK+F,MAPRiG,GAAA,EAAAC,GAAA,EAAAC,OAAA/G,EAAA,IAQzB,QAAAgH,EAAAC,EAAgBpM,KAAKqM,YAAYhI,GAAjCiB,OAAAC,cAAAyG,GAAAG,EAAAC,EAAA5G,QAAAC,MAAAuG,GAAA,EAAyC,KAA9BM,EAA8BH,EAAAjI,MAUrC,GATIlE,KAAKoI,SAASkE,KAAO3E,EACrBmE,GAAkB,EACX9L,KAAKoI,SAASkE,KAAOhJ,GAASqI,EAAMY,QAAQD,GAAK,IACxDX,EAAM9K,KAAKwD,GACNrE,KAAKwM,YAAYF,EAAGX,KACrBG,GAAkB,GAEtBH,EAAMxC,OAEN2C,EAAiBC,EACjB,OAAO,GAnBU,MAAAlG,GAAAoG,GAAA,EAAAC,EAAArG,EAAA,YAAAmG,GAAA,MAAAI,EAAAtG,QAAAsG,EAAAtG,SAAA,WAAAmG,EAAA,MAAAC,GAsBzB,OAAO,qCAGA7H,GACP,OAAOrE,KAAK6L,QAAQxH,KAAWrE,KAAKwM,YAAYnI,sCAKhD,IADA,IAAI8C,EAAQ,GACHnG,EAAI,EAAGA,GAAKhB,KAAKgE,WAAYhD,IAAK,CACvC,IAAK,IAAID,EAAI,EAAGA,GAAKf,KAAKgE,WAAYjD,IAClC,OAAQf,KAAKoI,SAASpI,KAAK4F,UAAU7E,EAAGC,KACpC,KAAKsC,EACD6D,GAAU,IACV,MACJ,KAAK5D,EACD4D,GAAU,IACV,MACJ,KAAK3D,EACD2D,GAAU,IAKtBA,GAAU,KAEd,OAAOA,WAITqB,EACF,SAAAA,IAAe1I,OAAAC,EAAA,EAAAD,CAAAE,KAAAwI,GACXxI,KAAKyH,OAAS,GACdzH,KAAKsI,UAAY,GACjBtI,KAAKiJ,UAAY,IAIV1E,IC5WAkI,aAlEX,SAAAA,IAAc,IAAAtL,EAAAnB,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAyM,GACVzM,KAAK0M,SAAWC,SAASC,eAAe,SACxC5M,KAAK6M,UAAYF,SAASC,eAAe,UACzC5M,KAAK6M,UAAUC,iBAAiB,UAAW,SAAAC,GACvC5L,EAAK6L,QAAQD,EAAME,cAAc/I,OACjC6I,EAAME,cAAc/I,MAAQ,KAC7B,wDAEEgJ,GACLlN,KAAK0M,SAASS,QAAQjJ,MAAQgJ,EAE9BlN,KAAK0M,SAASU,cAAc,IAAIC,YAAY,2CAExCH,GAAK,IAAA/K,EAAAnC,KACT,OAAO,IAAIsN,QAAQ,SAACC,EAAKC,GACiC,MAAlDrL,EAAKuK,SAASS,QAAQM,aAAa,cAGvCtL,EAAKuL,iBAAmB,KACxBvL,EAAKwL,QAAUJ,EACfpL,EAAKyL,OAASJ,EACdrL,EAAK0L,SAASX,wCAGZY,EAAUC,GACsC,MAAlD/N,KAAK0M,SAASS,QAAQM,aAAa,cAGvCzN,KAAK0N,iBAAmBK,EACxB/N,KAAK6N,SAAL,cAAAjM,OAA4BkM,qCAExBE,GACAA,EAAKC,WAAW,KACZjO,KAAK2N,UACL3N,KAAK2N,QAAQK,GACbhO,KAAK2N,QAAU,MAEZK,EAAKC,WAAW,MACnBjO,KAAK4N,SACL5N,KAAK4N,OAAOI,GACZhO,KAAK4N,OAAS,MAGlB5N,KAAK0N,kBACL1N,KAAKkO,eAAeF,0CAGbA,GAIX,IAHA,IAEIG,EAFEC,EAAQ,sHACRzN,EAAS,GAEsB,OAA7BwN,EAAQC,EAAMC,KAAKL,KACvBrN,EAAOE,KAAK,CACRsN,EAAM,GACN1L,SAAS0L,EAAM,IACf1L,SAAS0L,EAAM,IACf1L,SAAS0L,EAAM,IACf1L,SAAS0L,EAAM,IACf1L,SAAS0L,EAAM,IACfA,EAAM,GAAGG,MAAM,OAGvBtO,KAAK0N,iBAAiB/M,YCzD9B,SAAS4N,EAASC,GACd,IAAMC,EAAID,EAAM3K,WAAW,GAE3B,MAAO,EADI4K,EAAI,IAAI5K,WAAW,GAAK4K,EAAI,EAAIA,GAAK,IAAI5K,WAAW,GACpDpB,SAAS+L,EAAME,MAAM,KAGpC,SAASC,EAAS5N,EAAGC,GAEjB,MADc,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5FD,GAAKC,EAQtB,SAAS4N,EAASlM,EAAGiB,EAAGkL,GACpB,IAAIC,EAAGC,EAAGC,EAAGpO,EAAGqO,EAAGxI,EAAGyI,EAAGC,EAWzB,OAVyB,IAArBvD,UAAU/E,SACVlD,EAAIjB,EAAEiB,EACNkL,EAAInM,EAAEmM,EACNnM,EAAIA,EAAEA,GAIV+D,EAAIoI,GAAK,EAAIlL,GACbuL,EAAIL,GAAK,GAFTI,EAAQ,EAAJvM,GADJ9B,EAAIiJ,KAAKC,MAAU,EAAJpH,KAGEiB,GACjBwL,EAAIN,GAAK,GAAK,EAAII,GAAKtL,GACf/C,EAAI,GACR,KAAK,EACLkO,EAAID,EACJE,EAAII,EACJH,EAAIvI,EACJ,MACA,KAAK,EAAGqI,EAAII,EACZH,EAAIF,EACJG,EAAIvI,EACJ,MACA,KAAK,EACLqI,EAAIrI,EACJsI,EAAIF,EACJG,EAAIG,EACJ,MACA,KAAK,EACLL,EAAIrI,EACJsI,EAAIG,EACJF,EAAIH,EACJ,MACA,KAAK,EACLC,EAAIK,EACJJ,EAAItI,EACJuI,EAAIH,EACJ,MACA,KAAK,EACLC,EAAID,EACJE,EAAItI,EACJuI,EAAIE,EAKR,MAAO,CACHJ,EAAGjF,KAAKuF,MAAU,IAAJN,GACdC,EAAGlF,KAAKuF,MAAU,IAAJL,GACdC,EAAGnF,KAAKuF,MAAU,IAAJJ,IAStB,SAASK,EAASP,EAAGC,EAAGC,GACK,IAArBpD,UAAU/E,SACVkI,EAAID,EAAEC,EACNC,EAAIF,EAAEE,EACNF,EAAIA,EAAEA,GAEV,IAGIpM,EAHA4M,EAAMzF,KAAKyF,IAAIR,EAAGC,EAAGC,GACrBO,EAAM1F,KAAK0F,IAAIT,EAAGC,EAAGC,GACrB1C,EAAIgD,EAAMC,EAEV5L,EAAa,IAAR2L,EAAY,EAAIhD,EAAIgD,EACzBT,EAAIS,EAAM,IAEd,OAAQA,GACJ,KAAKC,EACL7M,EAAI,EACJ,MACA,KAAKoM,EACLpM,EAAKqM,EAAIC,EAAK1C,GAAKyC,EAAIC,EAAI,EAAG,GAC9BtM,GAAK,EAAI4J,EACT,MACA,KAAKyC,EACLrM,EAAKsM,EAAIF,EAAS,EAAJxC,EACd5J,GAAK,EAAI4J,EACT,MACA,KAAK0C,EACLtM,EAAKoM,EAAIC,EAAS,EAAJzC,EACd5J,GAAK,EAAI4J,EAMb,MAAO,CACH5J,EAAGA,EACHiB,EAAGA,EACHkL,EAAGA,GAIX,SAASW,EAAOV,EAAGC,EAAGC,GAOlB,OALyB,IAArBpD,UAAU/E,SAEVkI,GADAD,EAAIA,EAAEA,GACAC,EACNC,EAAIF,EAAEE,GAEH,CACHF,EAPU,GAOPA,EACHC,EARU,GAQPA,EACHC,EATU,GASPA,GAKX,SAASS,EAAoBC,GAEzB,IADA,IAAMrO,EAAgB,IAAIsO,MAAMD,EAAMzL,aAC7BrD,EAAI,EAAGA,EAAIS,EAAcwF,OAAQjG,IAAK,CAC3C,IAAMQ,EAAgB,IAAIvB,EAC1B,OAAQ6P,EAAMtH,SAASxH,IACnB,KAAK2C,EACLnC,EAAanB,MAAQ,IACrB,MACA,KAAKuD,EACLpC,EAAanB,MAAQ,IAIzBoB,EAAcT,GAAKQ,EAEvB,OAAOC,MA4IIuO,aAxIX,SAAAA,IAAe9P,OAAAC,EAAA,EAAAD,CAAAE,KAAA4P,GACX5P,KAAK6P,KAAO,GACZ7P,KAAK8P,QAAU,EACf9P,KAAK+P,IAAM,IAAItD,EACfzM,KAAKgQ,MAAQ,IAAIzL,EAAWvE,KAAK6P,KAAM,GACvC7P,KAAKiQ,WAAa,GAClBjQ,KAAKkQ,UAAY,KACjB,IAAM7O,EAAgBoO,EAAoBzP,KAAKgQ,OAC/ChQ,KAAKmQ,OAAO9O,2DAGJ,IAAAF,EAAAnB,KACRoQ,QAAQC,IAAI,aACZrQ,KAAK+P,IAAIO,UAAU,IAAK,SAAA3P,GAEpB,IAAIU,EADJF,EAAK8O,WAAatP,EAEdQ,EAAK+O,UACL7O,EAAgBF,EAAKoP,0BAErBlP,EAAgBoO,EAAoBtO,EAAK6O,OACzC7O,EAAKqP,kBAAkBnP,EAAeV,IAEtCU,GACAF,EAAKgP,OAAO9O,0EAKbN,EAAGC,mFAENhB,KAAKgQ,MAAM/I,KAAKjH,KAAKgQ,MAAMpK,UAAU7E,EAAGC,IACxChB,KAAKmQ,OAAOV,EAAoBzP,KAAKgQ,iBAC/BhQ,KAAK+P,IAAI5C,QAAT,QAAAvL,OAAyB5B,KAAKgQ,MAAMjK,OAASxC,EAAQ,QAAU,QAA/D,KAAA3B,OAA0E+M,EAAS5N,EAAGC,YAC5FhB,KAAKsQ,4DAELF,QAAQC,IAARI,EAAAC,mKAIiB3P,EAAGC,GACxB,IAAMwN,EAAQG,EAAS5N,EAAGC,GAC1B,GAAIhB,KAAKiQ,WAAWtN,IAAI,SAAA+E,GAAC,OAAIA,EAAE,KAAIiJ,SAASnC,GAAQ,CAChDxO,KAAKkQ,UAAY1B,EACjB,IAAMnN,EAAgBrB,KAAKuQ,yBAC3BvQ,KAAKmQ,OAAO9O,qDAIKN,EAAGC,GACxB,GAAIhB,KAAKkQ,UAAW,CAChBlQ,KAAKkQ,UAAY,KACjB,IAAM7O,EAAgBoO,EAAoBzP,KAAKgQ,OAC/ChQ,KAAKwQ,kBAAkBnP,EAAerB,KAAKiQ,YAC3CjQ,KAAKmQ,OAAO9O,mCAIbA,GAAe,IAAAc,EAAAnC,KAClB4Q,IAAST,OAAO5O,EAAAC,EAAAC,cAACoP,EAAD,CACZxO,MAAM,QACNC,OAAO,QACPpB,EAAGlB,KAAK6P,KACRnN,EAAG1C,KAAK6P,KACRxO,cAAeA,EACfS,oBAAqB,SAACf,EAAGC,GAAJ,OAAUmB,EAAK8E,KAAKlG,EAAGC,IAC5CgB,yBAA0B,SAACjB,EAAGC,GAAJ,OAAUmB,EAAKH,yBAAyBjB,EAAGC,IACrEkB,yBAA0B,SAACnB,EAAGC,GAAJ,OAAUmB,EAAKD,yBAAyBnB,EAAGC,MACrE2L,SAASC,eAAe,mDAGdvL,EAAe4O,GAC7B,IAAMa,EAAcjH,KAAKyF,IAALpI,MAAA2C,KAAI/J,OAAAiR,EAAA,EAAAjR,CAAQmQ,EAAWtN,IAAI,SAAA+E,GAAC,OAAIA,EAAE,OAChDsJ,EAAanH,KAAKyF,IAALpI,MAAA2C,KAAI/J,OAAAiR,EAAA,EAAAjR,CAAQmQ,EAAWtN,IAAI,SAAA+E,GAAC,OAAIA,EAAE,OAO/CuJ,EAAW5B,EAAS,EAAG,IAAK,GAAG3M,EAC/BwO,EAAU7B,EAAS,EAAG,IAAK,KAAK3M,EAVGsC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAWzC,QAAAC,EAAAC,EAA6B4K,EAAWkB,UAAxC7L,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAmD,KAAAoM,EAAAhM,EAAAlB,MAAAmN,EAAAvR,OAAA0G,EAAA,EAAA1G,CAAAsR,EAAA,GAAvCxQ,EAAuCyQ,EAAA,GAApCnB,EAAoCmB,EAAA,GACzCjQ,EAAeC,EAAcrB,KAAKgQ,MAAMpK,UAAUsB,MAAMlH,KAAKgQ,MAAOzB,EAAS2B,EAAU,MAC7F9O,EAAajB,SAAW+P,EAAU,GAAK,KAAKoB,QAAQ,GACpDlQ,EAAahB,SAAW8P,EAAU,GAElC,IAAMqB,EAAkBnQ,EAAahB,SAAW0Q,EAC1CU,EAAc3H,KAAKwG,IAAIkB,GACvBE,EAAY,IAAN7Q,EAAWsQ,EAAUD,EAAWpH,KAAKyF,IAAI,EAAGkC,EAX1C,EAWoE,GAC5EE,GAbO,GAac,IAAwB7H,KAAKyF,IAAI,EAAGkC,EAX/C,EAW2E,IAAO,IAC5FtO,EAAQ0L,EAAS6C,EAjBR,IACA,KAiBf,GAAU,IAAN7Q,EACA,GAAIsP,EAAU/P,QAAU6Q,EACpB5P,EAAad,YAAc,MAC3Bc,EAAauQ,WAAa,UACvB,CACHvQ,EAAad,YAAc,MAC3B,IAAMmO,EAAIe,EAAOtM,GACjB9B,EAAauQ,WAAb,QAAA/P,OAAkC6M,EAAEK,EAApC,KAAAlN,OAAyC6M,EAAEM,EAA3C,KAAAnN,OAAgD6M,EAAEO,EAAlD,KAAApN,OAAuD8P,EAAvD,UAEGtQ,EAAajB,UAAY6Q,IAChC5P,EAAad,YAAc,MAC3Bc,EAAauQ,WAAa,QAE9BvQ,EAAaf,gBAAb,QAAAuB,OAAuCsB,EAAM4L,EAA7C,KAAAlN,OAAkDsB,EAAM6L,EAAxD,KAAAnN,OAA6DsB,EAAM8L,EAAnE,KAAApN,OAAwE8P,EAAxE,MAlCqC,MAAA7L,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,qDAsCpB,IAAA0M,EAAA5R,KACf6R,EAAO7R,KAAKiQ,WAAW6B,KAAK,SAAApK,GAAC,OAAIA,EAAE,KAAOkK,EAAK1B,YACrD,IAAK2B,EACD,OAAO,KAEX,IAAME,EAAWxN,EAAWyN,KAAKhS,KAAKgQ,OALjB5I,GAAA,EAAAC,GAAA,EAAAC,OAAAnC,EAAA,IAMrB,QAAAoC,EAAAC,EAAmBqK,EAAK,GAAxBvM,OAAAC,cAAA6B,GAAAG,EAAAC,EAAAhC,QAAAC,MAAA2B,GAAA,EAA4B,KAAjBN,EAAiBS,EAAArD,MACxB6N,EAAS9K,KAAK8K,EAASnM,UAAUsB,MAAM6K,EAAUxD,EAASzH,MAPzC,MAAAjB,GAAAwB,GAAA,EAAAC,EAAAzB,EAAA,YAAAuB,GAAA,MAAAI,EAAA1B,QAAA0B,EAAA1B,SAAA,WAAAuB,EAAA,MAAAC,GASrB,IAAMjG,EAAgBoO,EAAoBsC,GACtChM,EAAO/F,KAAKgQ,MAAMjK,KAChBkM,EAAQ5Q,EAAc0Q,EAASnM,UAAUsB,MAAM6K,EAAUxD,EAASsD,EAAK,GAAG,MAChFI,EAAM9R,SAAW0R,EAAK,GAAK,KAAKP,QAAQ,GACxCW,EAAM7R,SAAWyR,EAAK,GACtBI,EAAMC,UAAYnM,IAASxC,EAAQ,QAAU,QAC7C,IAAIrD,EAAS,EACb6F,EAAOtC,EAAWsC,GAhBG,IAAA8B,GAAA,EAAAC,GAAA,EAAAC,OAAA5C,EAAA,IAiBrB,QAAA6C,EAAAC,EAAmB4J,EAAK,GAAGnD,MAAM,GAAjCpJ,OAAAC,cAAAsC,GAAAG,EAAAC,EAAAzC,QAAAC,MAAAoC,GAAA,EAAqC,KAA1Bf,EAA0BkB,EAAA9D,MAC3B9C,EAAeC,EAAc0Q,EAASnM,UAAUsB,MAAM6K,EAAUxD,EAASzH,KAC/E1F,EAAalB,OAASA,EACtBkB,EAAa8Q,UAAYnM,IAASxC,EAAQ,QAAU,QACpDwC,EAAOtC,EAAWsC,GAClB7F,KAtBiB,MAAA2F,GAAAiC,GAAA,EAAAC,EAAAlC,EAAA,YAAAgC,GAAA,MAAAI,EAAAnC,QAAAmC,EAAAnC,SAAA,WAAAgC,EAAA,MAAAC,GAwBrB,OAAO1G,WCjRK8Q,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnE,MACvB,2DCd2B,qBAAtBoE,oBACPH,OAAOI,kBAAoB,IAAI5C,GD4H7B,kBAAmB6C,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e5b0b241.chunk.js","sourcesContent":["import React from 'react';\nimport './GoBoard.css';\n\nexport class GoIntersectionState {\n    constructor() {\n        this.stone = null;\n        this.number = null;\n        this.winrate = null;\n        this.playouts = null;\n        this.backgroundColor = null;\n        this.borderWidth = null;\n        this.borderColor = null;\n    }\n}\n\nfunction range(start, end) {\n    const result = [];\n    if (start <= end) {\n        for (let i = start; i <= end; i++) {\n            result.push(i);\n        }\n    } else {\n        for (let i = start; i >= end; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nclass GoBoard extends React.Component {\n    index(x, y) {\n        return this.props.w * (y - 1) + x - 1;\n    }\n\n    /*, number, winrate, visits, backgroundColor, borderColor) {\n\n    }*/\n\n    renderIntersection(x, y) {\n        const intersection = this.props.intersections[this.index(x, y)];\n        return (\n            <GoIntersection\n                key={`${x}-${y}`}\n                onClick={() => this.props.onClickIntersection(x, y)}\n                onMouseEnter={() => this.props.onMouseEnterIntersection(x, y)}\n                onMouseLeave={() => this.props.onMouseLeaveIntersection(x, y)}\n                stone={intersection.stone}\n                number={intersection.number}\n                winrate={intersection.winrate}\n                playouts={intersection.playouts}\n                backgroundColor={intersection.backgroundColor}\n                borderColor={intersection.borderColor}\n            />\n        );\n    }\n\n    render() {\n        const goBoardStyle = {\n            width: this.props.width,\n            height: this.props.height,\n        };\n        return (\n            <div className=\"go-board\" style={goBoardStyle}>\n            <div className=\"go-board-content\">\n                {range(parseInt(this.props.h), 1).map(y => (\n                    <div className=\"go-row\" key={y}>\n                        {range(1, parseInt(this.props.w)).map(x => this.renderIntersection(x, y))}\n                    </div>\n                ))}\n            </div>\n            </div>\n        );\n    }\n}\n\nclass GoIntersection  extends React.PureComponent {\n    render() {\n        let url;\n        switch (this.props.stone) {\n            case \"B\":\n            url = \"url(https://storage.googleapis.com/mimiaka-storage/mimiaka/public/images/nachiguro2.png)\";\n            break;\n            case \"W\":\n            url = \"url(https://storage.googleapis.com/mimiaka-storage/mimiaka/public/images/hamaguri2.png)\";\n            break;\n            default:\n            url = null;\n        }\n        const intersectionStyle = {\n            color: this.props.stone === \"B\" ? \"white\" : \"black\",\n            backgroundImage: url,\n            backgroundColor: this.props.backgroundColor,\n            borderWidth: this.props.borderWidth,\n            borderColor: this.props.borderColor,\n        }\n        return (\n            <div className=\"go-intersection\" style={intersectionStyle} onClick={this.props.onClick} onMouseEnter={this.props.onMouseEnter} onMouseLeave={this.props.onMouseLeave}>\n                <div className=\"go-intersection-number\">{this.props.number}</div>\n                <div className=\"go-intersection-info\">\n                    <div>{this.props.winrate}</div>\n                    <div>{this.props.playouts}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GoBoard;\n","/* global jssgf */\n/* exported GoPosition */\n// (C) 2017 ICHIKAWA, Yuji (New 3 Rs)\n\nexport const PASS = -1;\nexport const EMPTY = 0;\nexport const BLACK = 1;\nexport const WHITE = 2;\n\nexport function opponentOf(color) {\n    switch (color) {\n        case BLACK:\n            return WHITE;\n        case WHITE:\n            return BLACK;\n        default:\n            return EMPTY;\n    }\n}\n\nfunction moveToXy(s) {\n    if (s === '') {\n        return PASS;\n    }\n    const offset = 'a'.charCodeAt(0) - 1;\n    return [s.charCodeAt(0) - offset, s.charCodeAt(1) - offset];\n}\n\n\nclass Marker {\n    constructor(boardSize) {\n        this.BOARD_SIZE = boardSize;\n        this.BOARD_SIZE2 = boardSize * boardSize;\n        this.value = 0;\n        this.marks = new Int32Array(this.BOARD_SIZE2);\n    }\n\n    clear() {\n        this.value += 1;\n    }\n\n    isMarked(point) {\n        return this.marks[point] === this.value;\n    }\n\n    mark(point) {\n        this.marks[point] = this.value;\n    }\n}\n\nconst HANDICAPS = [\n    [],\n    [],\n    [[16, 4], [4, 16]],\n    [[16, 4], [4, 16], [16, 16]],\n    [[16, 4], [4, 16], [16, 16], [4, 4]],\n    [[16, 4], [4, 16], [16, 16], [4, 4], [10, 10]],\n    [[16, 4], [4, 16], [16, 16], [4, 4], [16, 10], [4, 10]],\n    [[16, 4], [4, 16], [16, 16], [4, 4], [16, 10], [4, 10], [10, 10]],\n    [[16, 4], [4, 16], [16, 16], [4, 4], [16, 10], [4, 10], [10, 4], [10, 16]],\n    [[16, 4], [4, 16], [16, 16], [4, 4], [16, 10], [4, 10], [10, 4], [10, 16], [10, 10]],\n];\n\n\nclass GoPosition {\n    static copy(source) {\n        const result = new GoPosition(source.BOARD_SIZE, 0);\n        result.state[BLACK].set(source.state[BLACK]);\n        result.state[WHITE].set(source.state[WHITE]);\n        result.turn = source.turn;\n        result.ko = source.ko;\n        return result;\n    }\n\n    static fromSgf(sgf) {\n        const [root] = jssgf.fastParse(sgf);\n        const p = new this(parseInt(root.SZ || '19'));\n        let node = root;\n        while (node._children.length > 0) {\n            node = node._children[0];\n            let move;\n            if (node.B != null) {\n                move = node.B;\n            } else if (node.W != null) {\n                move = node.W;\n            } else {\n                continue;\n            }\n            p.play(p.xyToPoint.apply(p, moveToXy(move)));\n        }\n        return p\n    }\n\n    constructor(boardSize, handicap) {\n        this.BOARD_SIZE = boardSize;\n        this.BOARD_SIZE2 = boardSize * boardSize;\n        this.state = {\n            [BLACK]: new Float32Array(this.BOARD_SIZE2),\n            [WHITE]: new Float32Array(this.BOARD_SIZE2)\n        }\n        this.recent8 = [];\n        this.marker1 = new Marker(boardSize);\n        this.marker2 = new Marker(boardSize);\n        if (handicap > 1) {\n            for (const xy of HANDICAPS[handicap]) {\n                this.setState(this.xyToPoint(xy[0], xy[1]), BLACK);\n            }\n            this.turn = WHITE;\n        } else {\n            this.turn = BLACK;\n        }\n        this.ko = null;\n    }\n\n    opponent() {\n        return opponentOf(this.turn);\n    }\n\n    switchTurn() {\n        this.turn = opponentOf(this.turn);\n    }\n\n    getState(point) {\n        if (this.state[BLACK][point] === 1.0) {\n            return BLACK;\n        }\n        if (this.state[WHITE][point] === 1.0) {\n            return WHITE;\n        }\n        return EMPTY;\n    }\n\n    setState(point, color) {\n        if (color === EMPTY) {\n            this.state[BLACK][point] = 0.0;\n            this.state[WHITE][point] = 0.0;\n        } else {\n            this.state[color][point] = 1.0;\n        }\n    }\n\n    removeString(string) {\n        for (const e of string.points) {\n            this.setState(e, EMPTY);\n        }\n    }\n\n    captureBy(point) {\n        const opponent = this.opponent();\n        const captives = [];\n        for (const pt of this.adjacenciesAt(point)) {\n            if (this.getState(pt) === opponent) {\n                const string = this.stringAt(pt);\n                if (string.liberties.length === 0) {\n                    this.removeString(string);\n                    captives.push.apply(captives, string.points);\n                }\n            }\n        }\n        return captives;\n    }\n\n    stringAt(point) {\n        const color = this.getState(point);\n        if (color === EMPTY) {\n            return null;\n        }\n        const opponent = opponentOf(color);\n        const string = new GoString();\n\n        this.marker1.clear();\n        this.marker2.clear();\n        string.points.push(point);\n        this.marker2.mark(point);\n        for (let index = 0; index < string.points.length; index++) {\n            const pt = string.points[index];\n            if (!this.marker1.isMarked(pt)) {\n                this.marker1.mark(pt);\n                for (const a of this.adjacenciesAt(pt)) {\n                    if (!this.marker1.isMarked(a)) {\n                        const state = this.getState(a);\n                        if (state === color) {\n                            if (!this.marker2.isMarked(a)) {\n                                string.points.push(a);\n                                this.marker2.mark(a);\n                            }\n                        } else {\n                            this.marker1.mark(a);\n                            if (state === opponent) {\n                                string.opponents.push(a);\n                            } else {\n                                string.liberties.push(a);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return string;\n    }\n\n    putRecent8(point) {\n        this.recent8.unshift(point);\n        if (this.recent8.length > 8) {\n            this.recent8.pop();\n        }\n    }\n\n    play(point) {\n        if (point === PASS) {\n            this.putRecent8(point);\n            this.switchTurn();\n            return {\n                turn: this.turn,\n                point,\n                ko: this.ko,\n                captives: []\n            };\n        }\n        if (point === this.ko || this.getState(point) !== EMPTY) { // 着手禁止\n            return null;\n        }\n        this.setState(point, this.turn);\n\n        const captives = this.captureBy(point);\n        const string = this.stringAt(point);\n        const liberties = string.liberties.length;\n        if (liberties === 0) { // 着手禁止\n            this.setState(point, EMPTY); // restore\n            return null;\n        }\n        const ko = this.ko;\n        if (captives.length === 1 && liberties === 1 && string.points.length === 1) {\n            this.ko = string.liberties[0];\n        } else {\n            this.ko = null;\n        }\n        this.putRecent8(point);\n        const turn = this.turn;\n        this.switchTurn();\n        return { turn, point, ko, captives, string };\n    }\n\n    undoPlay(move) {\n        this.ko = move.ko;\n        this.switchTurn();\n        if (move.point === PASS) {\n            return;\n        }\n        this.setState(move.point, EMPTY);\n        const opponent = opponentOf(move.turn);\n        for (const p of move.captives) {\n            this.setState(p, opponent);\n        }\n    }\n\n    isLegal(point) {\n        const move = this.play(point);\n        if (move) {\n            this.undoPlay(move);\n            return true;\n        }\n        return false;\n    }\n\n    xyToPoint(x, y) {\n        return (x - 1) + (y - 1) * this.BOARD_SIZE;\n    }\n\n    pointToXy(point) {\n        const y = Math.floor(point / this.BOARD_SIZE);\n        const x = point - y * this.BOARD_SIZE;\n        return [x + 1, y + 1];\n    }\n\n    adjacenciesAt(point) {\n        const xy = this.pointToXy(point);\n        const result = [];\n        for (const e of [[0, -1], [-1, 0], [1, 0], [0, 1]]) {\n            const x = xy[0] + e[0];\n            const y = xy[1] + e[1];\n            if (x >= 1 && x <= this.BOARD_SIZE && y >= 1 && y <= this.BOARD_SIZE) {\n                result.push(this.xyToPoint(x, y));\n            }\n        }\n        return result;\n    }\n\n    diagonalsAt(point) {\n        const xy = this.pointToXy(point);\n        const result = [];\n        for (const e of [[-1, -1], [-1, 1], [1, -1], [1, -1]]) {\n            const x = xy[0] + e[0];\n            const y = xy[1] + e[1];\n            if (x >= 1 && x <= this.BOARD_SIZE && y >= 1 && y <= this.BOARD_SIZE) {\n                result.push(this.xyToPoint(x, y));\n            }\n        }\n        return result;\n    }\n\n    canEscape(string) {\n        if (string.liberties.length > 1) { // アタリじゃない\n            return true;\n        }\n        for (const o of string.opponents) { // 相手の石を取って逃げる\n            const os = this.stringAt(o);\n            if (os.liberties.length === 1) { // アタリの石\n                const escape = this.play(os.liberties[0]);\n                if (!escape) { // 着手禁止\n                    continue;\n                }\n                const ss = this.stringAt(string.points[0]); // stringの更新\n                if (ss.liberties.length === 2) { // 取ってもまだシチョウ\n                    for (const o of ss.liberties) {\n                        const tryToCapture = this.play(o);\n                        if (!tryToCapture) {\n                            continue;\n                        }\n                        const result = this.canEscape(this.stringAt(ss.points[0]));\n                        this.undoPlay(tryToCapture);\n                        if (!result) {\n                            this.undoPlay(escape);\n                            return false;\n                        }\n                    }\n                    this.undoPlay(escape);\n                    return true;\n                } else {\n                    this.undoPlay(escape);\n                    return ss.liberties.length > 2;\n                }\n            }\n        }\n        const escape = this.play(string.liberties[0]);\n        if (!escape) {\n            return false;\n        }\n        if (escape.string.liberties.length === 2) {\n            for (const o of escape.string.liberties) {\n                const tryToCapture = this.play(o);\n                if (!tryToCapture) {\n                    continue;\n                }\n                const ss = this.stringAt(string.points[0]);\n                const result = this.canEscape(ss);\n                this.undoPlay(tryToCapture);\n                if (!result) {\n                    this.undoPlay(escape);\n                    return false;\n                }\n            }\n            this.undoPlay(escape);\n            return true;\n        } else {\n            this.undoPlay(escape);\n            return escape.string.liberties.length !== 1;\n        }\n    }\n\n    likeEye(point) {\n        if (this.getState(point) !== EMPTY) {\n            return false;\n        }\n        const adjacencies = this.adjacenciesAt(point);\n        if (!adjacencies.every(p => this.getState(p) === this.turn)) {\n            return false;\n        }\n        return adjacencies.every(p => this.stringAt(p).liberties.length > 1);\n    }\n\n    isEyeOfTurn(point, stack=[]) {\n        if (!this.likeEye(point)) {\n            return false;\n        }\n        let numBadDiagonal = 0;\n        const allowableBadDiagonal = this.adjacenciesAt(point).length === 4 ? 1 : 0;\n\n        const opponent = opponentOf(this.turn);\n        for (const d of this.diagonalsAt(point)) {\n            if (this.getState(d) === opponent) {\n                numBadDiagonal += 1;\n            } else if (this.getState(d) === EMPTY && stack.indexOf(d) < 0) {\n                stack.push(point);\n                if (!this.isEyeOfTurn(d, stack)) {\n                    numBadDiagonal += 1;\n                }\n                stack.pop();\n            }\n            if (numBadDiagonal > allowableBadDiagonal) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    isFalseEye(point) {\n        return this.likeEye(point) && !this.isEyeOfTurn(point);\n    }\n\n    toString() {\n        let string ='';\n        for (let y = 1; y <= this.BOARD_SIZE; y++) {\n            for (let x = 1; x <= this.BOARD_SIZE; x++) {\n                switch (this.getState(this.xyToPoint(x, y))) {\n                    case EMPTY:\n                        string += '.';\n                        break;\n                    case BLACK:\n                        string += 'X';\n                        break;\n                    case WHITE:\n                        string += 'O';\n                        break;\n                    default:\n                }\n            }\n            string += '\\n';\n        }\n        return string;\n    }\n}\n\nclass GoString {\n    constructor() {\n        this.points = [];\n        this.liberties = [];\n        this.opponents = [];\n    }\n}\n\nexport default GoPosition;","class Gtp {\n    constructor() {\n        this.inputDom = document.getElementById(\"input\");\n        this.outputDom = document.getElementById(\"output\");\n        this.outputDom.addEventListener(\"message\", event => {\n            this.process(event.currentTarget.value);\n            event.currentTarget.value = \"\";\n        }, false);\n    }\n    _command(str) {\n        this.inputDom.command.value = str;\n        // submitメソッドはイベントハンドラを走らせない。\n        this.inputDom.dispatchEvent(new CustomEvent('submit'));\n    }\n    command(str) {\n        return new Promise((res, rej) => {\n            if (this.inputDom.command.getAttribute(\"disabled\") != null) {\n                return;\n            }\n            this.LzAnalyzeHandler = null;\n            this.resolve = res;\n            this.reject = rej;\n            this._command(str);\n        });\n    }\n    lzAnalyze(interval, handler) {\n        if (this.inputDom.command.getAttribute(\"disabled\") != null) {\n            return;\n        }\n        this.LzAnalyzeHandler = handler;\n        this._command(`lz-analyze ${interval}`);\n    }\n    process(line) {\n        if (line.startsWith(\"=\")) {\n            if (this.resolve) {\n                this.resolve(line);\n                this.resolve = null;;\n            }\n        } else if (line.startsWith(\"?\")) {\n            if (this.reject) {\n                this.reject(line);\n                this.reject = null;;\n            }\n        }\n        if (this.LzAnalyzeHandler) {\n            this.parseLzAnalyze(line);\n        }\n    }\n    parseLzAnalyze(line) {\n        const regex = /info move ([A-Z]\\d{1,2}) visits (\\d+) winrate (\\d+) prior (-?\\d+) lcb (-?\\d+) order (\\d+) pv ((:? ?[A-Z]\\d{1,2})+)/g;\n        const result = [];\n        let match;\n        while ((match = regex.exec(line)) != null) {\n            result.push([\n                match[1],\n                parseInt(match[2]),\n                parseInt(match[3]),\n                parseInt(match[4]),\n                parseInt(match[5]),\n                parseInt(match[6]),\n                match[7].split(\" \")\n            ]);\n        }\n        this.LzAnalyzeHandler(result);\n    }\n}\n\nexport default Gtp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GoBoard, { GoIntersectionState } from './GoBoard';\nimport GoPosition, { BLACK, WHITE, opponentOf } from './GoPosition';\nimport Gtp from \"./Gtp.js\";\n\nfunction coord2xy(coord) {\n    const c = coord.charCodeAt(0);\n    const x = (c < \"I\".charCodeAt(0) ? c + 1 : c) - \"A\".charCodeAt(0);\n    return [x, parseInt(coord.slice(1))];\n}\n\nfunction xy2coord(x, y) {\n    const COORD = [\"@\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\"];\n    return COORD[x] + y;\n}\n\n/* accepts parameters\n * h  Object = {h:x, s:y, v:z}\n * OR \n * h, s, v\n*/\nfunction HSVtoRGB(h, s, v) {\n    let r, g, b, i, f, p, q, t;\n    if (arguments.length === 1) {\n        s = h.s;\n        v = h.v;\n        h = h.h;\n    }\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n        case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n        case 1: r = q;\n        g = v;\n        b = p;\n        break;\n        case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n        case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n        case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n        case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n        default:\n        break;\n    }\n    return {\n        r: Math.round(r * 255),\n        g: Math.round(g * 255),\n        b: Math.round(b * 255)\n    };\n}\n\n/* accepts parameters\n * r  Object = {r:x, g:y, b:z}\n * OR \n * r, g, b\n*/\nfunction RGBtoHSV(r, g, b) {\n    if (arguments.length === 1) {\n        g = r.g;\n        b = r.b;\n        r = r.r;\n    }\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let d = max - min;\n    let h;\n    let s = (max === 0 ? 0 : d / max);\n    let v = max / 255;\n\n    switch (max) {\n        case min:\n        h = 0;\n        break;\n        case r:\n        h = (g - b) + d * (g < b ? 6: 0);\n        h /= 6 * d;\n        break;\n        case g:\n        h = (b - r) + d * 2;\n        h /= 6 * d;\n        break;\n        case b:\n        h = (r - g) + d * 4;\n        h /= 6 * d;\n        break;\n        default:\n        break;\n    }\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\nfunction darker(r, g, b) {\n    const ratio = 0.7;\n    if (arguments.length === 1) {\n        r = r.r;\n        g = r.g;\n        b = r.b;\n    }\n    return {\n        r: r * ratio,\n        g: g * ratio,\n        b: b * ratio,\n    }\n}\n\n\nfunction board2intersections(board) {\n    const intersections = new Array(board.BOARD_SIZE2);\n    for (let i = 0; i < intersections.length; i++) {\n        const intersection  = new GoIntersectionState();\n        switch (board.getState(i)) {\n            case BLACK:\n            intersection.stone = \"B\";\n            break;\n            case WHITE:\n            intersection.stone = \"W\";\n            break;\n            default:\n        }\n        intersections[i] = intersection;\n    }\n    return intersections;\n}\n\nclass GoBoardController {\n    constructor() {\n        this.size = 19;\n        this.byoyomi = 3;\n        this.gtp = new Gtp();\n        this.model = new GoPosition(this.size, 0);\n        this.candidates = [];\n        this.candidate = null;\n        const intersections = board2intersections(this.model);\n        this.render(intersections);\n    }\n    \n    lzAnalyze() {\n        console.log(\"lzAnalyze\");\n        this.gtp.lzAnalyze(100, result => {\n            this.candidates = result;\n            let intersections;\n            if (this.candidate) {\n                intersections = this.variationIntersections();\n            } else {\n                intersections = board2intersections(this.model);\n                this.addCandidatesInfo(intersections, result);\n            }\n            if (intersections) {\n                this.render(intersections);\n            }\n        });\n    }\n\n    async play(x, y) {\n        try {\n            this.model.play(this.model.xyToPoint(x, y));\n            this.render(board2intersections(this.model));\n            await this.gtp.command(`play ${this.model.turn === BLACK ? \"black\" : \"white\"} ${xy2coord(x, y)}`);\n            this.lzAnalyze();\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    onMouseEnterIntersection(x, y) {\n        const coord = xy2coord(x, y);\n        if (this.candidates.map(e => e[0]).includes(coord)) {\n            this.candidate = coord;\n            const intersections = this.variationIntersections();\n            this.render(intersections);\n        }\n    }\n\n    onMouseLeaveIntersection(x, y) {\n        if (this.candidate) {\n            this.candidate = null;\n            const intersections = board2intersections(this.model);\n            this.addCandidatesInfo(intersections, this.candidates);\n            this.render(intersections);\n        }\n    }\n\n    render(intersections) {\n        ReactDOM.render(<GoBoard\n            width=\"500px\"\n            height=\"500px\"\n            w={this.size}\n            h={this.size}\n            intersections={intersections}\n            onClickIntersection={(x, y) => this.play(x, y)}\n            onMouseEnterIntersection={(x, y) => this.onMouseEnterIntersection(x, y)}\n            onMouseLeaveIntersection={(x, y) => this.onMouseLeaveIntersection(x, y)}\n        />, document.getElementById('root'));\n    }\n\n    addCandidatesInfo(intersections, candidates) {\n        const maxPlayouts = Math.max(...candidates.map(e => e[1]));\n        const maxWinrate = Math.max(...candidates.map(e => e[2]));\n        const saturation = 0.75;\n        const brightness = 0.85;\n        const maxAlpha = 240;\n        const minAlpha = 32;\n        const hueFactor = 3.0;\n        const alphaFactor = 5.0;\n        const greenHue = RGBtoHSV(0, 255, 0).h;\n        const cyanHue = RGBtoHSV(0, 255, 255).h;\n        for (const [i, candidate] of candidates.entries()) {\n            const intersection = intersections[this.model.xyToPoint.apply(this.model, coord2xy(candidate[0]))];\n            intersection.winrate = (candidate[2] / 100).toFixed(1);\n            intersection.playouts = candidate[1];\n    \n            const percentPlayouts = intersection.playouts / maxPlayouts;\n            const logPlayouts = Math.log(percentPlayouts);\n            const hue = i === 0 ?  cyanHue : greenHue * Math.max(0, logPlayouts / hueFactor + 1);\n            const alpha = ((minAlpha + (maxAlpha - minAlpha) * Math.max(0, logPlayouts / alphaFactor + 1))) / 255;\n            const color = HSVtoRGB(hue, saturation, brightness);\n            if (i === 0) {\n                if (candidate.winrate < maxWinrate) {\n                    intersection.borderWidth = \"2px\";\n                    intersection.borderCoor = \"red\";\n                } else {\n                    intersection.borderWidth = \"1px\";\n                    const c = darker(color);\n                    intersection.borderCoor = `rgba(${c.r},${c.g},${c.b},${alpha})`;\n                }\n            } else if (intersection.winrate === maxWinrate) {\n                intersection.borderWidth = \"2px\";\n                intersection.borderCoor = \"blue\";\n            }\n            intersection.backgroundColor = `rgba(${color.r},${color.g},${color.b},${alpha})`;\n        }\n    }\n    \n    variationIntersections() {\n        const info = this.candidates.find(e => e[0] === this.candidate);\n        if (!info) {\n            return null;\n        }\n        const position = GoPosition.copy(this.model);\n        for (const move of info[6]) {\n            position.play(position.xyToPoint.apply(position, coord2xy(move)));\n        }\n        const intersections = board2intersections(position);\n        let turn = this.model.turn;\n        const first = intersections[position.xyToPoint.apply(position, coord2xy(info[6][0]))];\n        first.winrate = (info[2] / 100).toFixed(1);\n        first.playouts = info[1];\n        first.textColor = turn === BLACK ? \"white\" : \"black\";\n        let number = 2;\n        turn = opponentOf(turn);\n        for (const move of info[6].slice(1)) {\n            const intersection = intersections[position.xyToPoint.apply(position, coord2xy(move))]\n            intersection.number = number;\n            intersection.textColor = turn === BLACK ? \"white\" : \"black\";\n            turn = opponentOf(turn);\n            number++;\n        }\n        return intersections;\n    }\n}\n\nexport default GoBoardController;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\nimport GoBoardController from './GoBoardController';\nimport * as serviceWorker from './serviceWorker';\n\nif (typeof SharedArrayBuffer !== \"undefined\") {\n    window.goBoardController = new GoBoardController();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}