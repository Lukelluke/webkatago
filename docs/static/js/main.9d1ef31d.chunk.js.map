{"version":3,"sources":["SituationBar.js","GoBoard.js","GoPosition.js","Gtp.js","GoBoardController.js","serviceWorker.js","index.js"],"names":["SituationBar","props","style","width","height","borderStyle","borderWidth","borderColor","marginBottom","blackStyle","float","textAlign","color","concat","blackPercent","backgroundColor","whiteStyle","react_default","a","createElement","blackInfo","whiteInfo","GoIntersectionState","Object","classCallCheck","this","stone","number","winrate","playouts","fillColor","range","start","end","result","i","push","GoBoard","x","y","w","_this","intersection","intersections","index","GoBoard_GoIntersection","key","onClick","onClickIntersection","onMouseEnter","onMouseEnterIntersection","onMouseLeave","onMouseLeaveIntersection","_this2","goBoardStyle","className","parseInt","h","map","renderIntersection","React","Component","GoIntersection","url","intersectionStyle","backgroundImage","infoStyle","PureComponent","PASS","EMPTY","BLACK","WHITE","opponentOf","Marker","boardSize","BOARD_SIZE","BOARD_SIZE2","value","marks","Int32Array","point","HANDICAPS","GoPosition","handicap","_this$state","state","defineProperty","Float32Array","recent8","marker1","marker2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","xy","setState","xyToPoint","err","return","turn","ko","source","set","string","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","points","e","opponent","captives","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","adjacenciesAt","pt","getState","stringAt","liberties","length","removeString","apply","GoString","clear","mark","isMarked","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","opponents","unshift","pop","putRecent8","switchTurn","captureBy","move","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","p","play","undoPlay","Math","floor","pointToXy","_i","_arr","_i2","_arr2","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","o","os","escape","ss","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","tryToCapture","canEscape","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","adjacencies","every","stack","arguments","likeEye","numBadDiagonal","allowableBadDiagonal","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","diagonalsAt","d","indexOf","isEyeOfTurn","Gtp","inputDom","document","getElementById","outputDom","addEventListener","event","process","currentTarget","str","command","dispatchEvent","CustomEvent","Promise","res","rej","getAttribute","LzAnalyzeHandler","resolve","reject","_command","interval","handler","kataAnalyzeHandler","line","startsWith","parseLzAnalyze","parseKataAnalyze","match","regex","exec","visits","prior","lcb","orer","pv","split","info","ownership","utility","parseFloat","radius","scoreMean","scoreStdev","utilibyLcb","order","trim","coord2xy","coord","c","charCodeAt","slice","xy2coord","HSVtoRGB","s","v","r","g","b","f","q","t","round","RGBtoHSV","max","min","darker","board2intersections","board","Array","GoBoardController","size","byoyomi","gtp","model","candidates","candidate","percent","render","lzAnalyze","variationIntersections","addCandidatesInfo","blackWinrate","black","toFixed","white","kataAnalyze","addOwnership","first","blackScore","console","log","_context","t0","includes","_this3","ReactDOM","src_SituationBar","src_GoBoard_0","maxPlayouts","toConsumableArray","maxWinrate","greenHue","cyanHue","entries","_ref3","_ref2","slicedToArray","percentPlayouts","logPlayouts","hue","alpha","borderCoor","_this4","find","position","copy","textColor","_ref6","_ref5","_this$model$pointToXy","_this$model$pointToXy2","_ref9","_ref8","_this$model$pointToXy3","_this$model$pointToXy4","Boolean","window","location","hostname","SharedArrayBuffer","goBoardController","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d1ef31d.chunk.js","sourcesContent":["/**\n * @preserve Copyright 2019 ICHIKAWA, Yuji (New 3 Rs)\n */\n\nimport React from 'react';\n\nfunction SituationBar(props) {\n    const style = {\n        width: props.width,\n        height: \"15px\",\n        borderStyle: \"solid\",\n        borderWidth: \"1px\",\n        borderColor: \"black\",\n        marginBottom: \"5px\",\n    }\n    const blackStyle = {\n        float: \"left\",\n        textAlign: \"center\",\n        color: \"white\",\n        width: `${props.blackPercent}%`,\n        height: \"100%\",\n        backgroundColor: \"black\",\n    }\n    const whiteStyle = {\n        float: \"left\",\n        textAlign: \"center\",\n        width: `${100 - props.blackPercent}%`,\n        height: \"100%\",\n    }\n    return (\n        <div style={style}>\n        <div style={blackStyle}>{props.blackInfo}</div>\n        <div style={whiteStyle}>{props.whiteInfo}</div>\n        </div>\n    );\n}\n\nexport default SituationBar;","/**\n * @preserve Copyright 2019 ICHIKAWA, Yuji (New 3 Rs)\n */\n\n import React from 'react';\nimport './GoBoard.css';\n\nexport class GoIntersectionState {\n    constructor() {\n        this.stone = null;\n        this.number = null;\n        this.winrate = null;\n        this.playouts = null;\n        this.fillColor = null;\n        this.borderWidth = null;\n        this.borderColor = null;\n        this.backgroundColor = null;\n    }\n}\n\nfunction range(start, end) {\n    const result = [];\n    if (start <= end) {\n        for (let i = start; i <= end; i++) {\n            result.push(i);\n        }\n    } else {\n        for (let i = start; i >= end; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nclass GoBoard extends React.Component {\n    index(x, y) {\n        return this.props.w * (y - 1) + x - 1;\n    }\n\n    /*, number, winrate, visits, backgroundColor, borderColor) {\n\n    }*/\n\n    renderIntersection(x, y) {\n        const intersection = this.props.intersections[this.index(x, y)];\n        return (\n            <GoIntersection\n                key={`${x}-${y}`}\n                onClick={() => this.props.onClickIntersection(x, y)}\n                onMouseEnter={() => this.props.onMouseEnterIntersection(x, y)}\n                onMouseLeave={() => this.props.onMouseLeaveIntersection(x, y)}\n                stone={intersection.stone}\n                number={intersection.number}\n                winrate={intersection.winrate}\n                playouts={intersection.playouts}\n                fillColor={intersection.fillColor}\n                borderColor={intersection.borderColor}\n                backgroundColor={intersection.backgroundColor}\n            />\n        );\n    }\n\n    render() {\n        const goBoardStyle = {\n            width: this.props.width,\n            height: this.props.height,\n        };\n        return (\n            <div className=\"go-board\" style={goBoardStyle}>\n            <div className=\"go-board-content\">\n                {range(parseInt(this.props.h), 1).map(y => (\n                    <div className=\"go-row\" key={y}>\n                        {range(1, parseInt(this.props.w)).map(x => this.renderIntersection(x, y))}\n                    </div>\n                ))}\n            </div>\n            </div>\n        );\n    }\n}\n\nclass GoIntersection extends React.PureComponent {\n    render() {\n        let url;\n        switch (this.props.stone) {\n            case \"B\":\n            url = \"url(https://storage.googleapis.com/mimiaka-storage/mimiaka/public/images/nachiguro2.png)\";\n            break;\n            case \"W\":\n            url = \"url(https://storage.googleapis.com/mimiaka-storage/mimiaka/public/images/hamaguri2.png)\";\n            break;\n            default:\n            url = null;\n        }\n        const intersectionStyle = {\n            color: this.props.stone === \"B\" ? \"white\" : \"black\",\n            backgroundImage: url,\n            backgroundColor: this.props.backgroundColor,\n        }\n        const infoStyle = {\n            backgroundColor: this.props.fillColor,\n            borderWidth: this.props.borderWidth,\n            borderColor: this.props.borderColor,\n        }\n        return (\n            <div className=\"go-intersection\" style={intersectionStyle} onClick={this.props.onClick} onMouseEnter={this.props.onMouseEnter} onMouseLeave={this.props.onMouseLeave}>\n                <div className=\"go-intersection-number\">{this.props.number}</div>\n                <div className=\"go-intersection-info\" style={infoStyle}>\n                    <div>{this.props.winrate}</div>\n                    <div>{this.props.playouts}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GoBoard;\n","/**\n * @preserve Copyright 2019 ICHIKAWA, Yuji (New 3 Rs)\n */\n\nexport const PASS = -1;\nexport const EMPTY = 0;\nexport const BLACK = 1;\nexport const WHITE = 2;\n\nexport function opponentOf(color) {\n    switch (color) {\n        case BLACK:\n            return WHITE;\n        case WHITE:\n            return BLACK;\n        default:\n            return EMPTY;\n    }\n}\n\nfunction moveToXy(s) {\n    if (s === '') {\n        return PASS;\n    }\n    const offset = 'a'.charCodeAt(0) - 1;\n    return [s.charCodeAt(0) - offset, s.charCodeAt(1) - offset];\n}\n\n\nclass Marker {\n    constructor(boardSize) {\n        this.BOARD_SIZE = boardSize;\n        this.BOARD_SIZE2 = boardSize * boardSize;\n        this.value = 0;\n        this.marks = new Int32Array(this.BOARD_SIZE2);\n    }\n\n    clear() {\n        this.value += 1;\n    }\n\n    isMarked(point) {\n        return this.marks[point] === this.value;\n    }\n\n    mark(point) {\n        this.marks[point] = this.value;\n    }\n}\n\nconst HANDICAPS = [\n    [],\n    [],\n    [[16, 4], [4, 16]],\n    [[16, 4], [4, 16], [16, 16]],\n    [[16, 4], [4, 16], [16, 16], [4, 4]],\n    [[16, 4], [4, 16], [16, 16], [4, 4], [10, 10]],\n    [[16, 4], [4, 16], [16, 16], [4, 4], [16, 10], [4, 10]],\n    [[16, 4], [4, 16], [16, 16], [4, 4], [16, 10], [4, 10], [10, 10]],\n    [[16, 4], [4, 16], [16, 16], [4, 4], [16, 10], [4, 10], [10, 4], [10, 16]],\n    [[16, 4], [4, 16], [16, 16], [4, 4], [16, 10], [4, 10], [10, 4], [10, 16], [10, 10]],\n];\n\n\nclass GoPosition {\n    static copy(source) {\n        const result = new GoPosition(source.BOARD_SIZE, 0);\n        result.state[BLACK].set(source.state[BLACK]);\n        result.state[WHITE].set(source.state[WHITE]);\n        result.turn = source.turn;\n        result.ko = source.ko;\n        return result;\n    }\n\n    /*\n    static fromSgf(sgf) {\n        const [root] = jssgf.fastParse(sgf);\n        const p = new this(parseInt(root.SZ || '19'));\n        let node = root;\n        while (node._children.length > 0) {\n            node = node._children[0];\n            let move;\n            if (node.B != null) {\n                move = node.B;\n            } else if (node.W != null) {\n                move = node.W;\n            } else {\n                continue;\n            }\n            p.play(p.xyToPoint.apply(p, moveToXy(move)));\n        }\n        return p\n    }\n    */\n\n    constructor(boardSize, handicap) {\n        this.BOARD_SIZE = boardSize;\n        this.BOARD_SIZE2 = boardSize * boardSize;\n        this.state = {\n            [BLACK]: new Float32Array(this.BOARD_SIZE2),\n            [WHITE]: new Float32Array(this.BOARD_SIZE2)\n        }\n        this.recent8 = [];\n        this.marker1 = new Marker(boardSize);\n        this.marker2 = new Marker(boardSize);\n        if (handicap > 1) {\n            for (const xy of HANDICAPS[handicap]) {\n                this.setState(this.xyToPoint(xy[0], xy[1]), BLACK);\n            }\n            this.turn = WHITE;\n        } else {\n            this.turn = BLACK;\n        }\n        this.ko = null;\n    }\n\n    opponent() {\n        return opponentOf(this.turn);\n    }\n\n    switchTurn() {\n        this.turn = opponentOf(this.turn);\n    }\n\n    getState(point) {\n        if (this.state[BLACK][point] === 1.0) {\n            return BLACK;\n        }\n        if (this.state[WHITE][point] === 1.0) {\n            return WHITE;\n        }\n        return EMPTY;\n    }\n\n    setState(point, color) {\n        if (color === EMPTY) {\n            this.state[BLACK][point] = 0.0;\n            this.state[WHITE][point] = 0.0;\n        } else {\n            this.state[color][point] = 1.0;\n        }\n    }\n\n    removeString(string) {\n        for (const e of string.points) {\n            this.setState(e, EMPTY);\n        }\n    }\n\n    captureBy(point) {\n        const opponent = this.opponent();\n        const captives = [];\n        for (const pt of this.adjacenciesAt(point)) {\n            if (this.getState(pt) === opponent) {\n                const string = this.stringAt(pt);\n                if (string.liberties.length === 0) {\n                    this.removeString(string);\n                    captives.push.apply(captives, string.points);\n                }\n            }\n        }\n        return captives;\n    }\n\n    stringAt(point) {\n        const color = this.getState(point);\n        if (color === EMPTY) {\n            return null;\n        }\n        const opponent = opponentOf(color);\n        const string = new GoString();\n\n        this.marker1.clear();\n        this.marker2.clear();\n        string.points.push(point);\n        this.marker2.mark(point);\n        for (let index = 0; index < string.points.length; index++) {\n            const pt = string.points[index];\n            if (!this.marker1.isMarked(pt)) {\n                this.marker1.mark(pt);\n                for (const a of this.adjacenciesAt(pt)) {\n                    if (!this.marker1.isMarked(a)) {\n                        const state = this.getState(a);\n                        if (state === color) {\n                            if (!this.marker2.isMarked(a)) {\n                                string.points.push(a);\n                                this.marker2.mark(a);\n                            }\n                        } else {\n                            this.marker1.mark(a);\n                            if (state === opponent) {\n                                string.opponents.push(a);\n                            } else {\n                                string.liberties.push(a);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return string;\n    }\n\n    putRecent8(point) {\n        this.recent8.unshift(point);\n        if (this.recent8.length > 8) {\n            this.recent8.pop();\n        }\n    }\n\n    play(point) {\n        if (point === PASS) {\n            this.putRecent8(point);\n            this.switchTurn();\n            return {\n                turn: this.turn,\n                point,\n                ko: this.ko,\n                captives: []\n            };\n        }\n        if (point === this.ko || this.getState(point) !== EMPTY) { // 着手禁止\n            return null;\n        }\n        this.setState(point, this.turn);\n\n        const captives = this.captureBy(point);\n        const string = this.stringAt(point);\n        const liberties = string.liberties.length;\n        if (liberties === 0) { // 着手禁止\n            this.setState(point, EMPTY); // restore\n            return null;\n        }\n        const ko = this.ko;\n        if (captives.length === 1 && liberties === 1 && string.points.length === 1) {\n            this.ko = string.liberties[0];\n        } else {\n            this.ko = null;\n        }\n        this.putRecent8(point);\n        const turn = this.turn;\n        this.switchTurn();\n        return { turn, point, ko, captives, string };\n    }\n\n    undoPlay(move) {\n        this.ko = move.ko;\n        this.switchTurn();\n        if (move.point === PASS) {\n            return;\n        }\n        this.setState(move.point, EMPTY);\n        const opponent = opponentOf(move.turn);\n        for (const p of move.captives) {\n            this.setState(p, opponent);\n        }\n    }\n\n    isLegal(point) {\n        const move = this.play(point);\n        if (move) {\n            this.undoPlay(move);\n            return true;\n        }\n        return false;\n    }\n\n    xyToPoint(x, y) {\n        return (x - 1) + (y - 1) * this.BOARD_SIZE;\n    }\n\n    pointToXy(point) {\n        const y = Math.floor(point / this.BOARD_SIZE);\n        const x = point - y * this.BOARD_SIZE;\n        return [x + 1, y + 1];\n    }\n\n    adjacenciesAt(point) {\n        const xy = this.pointToXy(point);\n        const result = [];\n        for (const e of [[0, -1], [-1, 0], [1, 0], [0, 1]]) {\n            const x = xy[0] + e[0];\n            const y = xy[1] + e[1];\n            if (x >= 1 && x <= this.BOARD_SIZE && y >= 1 && y <= this.BOARD_SIZE) {\n                result.push(this.xyToPoint(x, y));\n            }\n        }\n        return result;\n    }\n\n    diagonalsAt(point) {\n        const xy = this.pointToXy(point);\n        const result = [];\n        for (const e of [[-1, -1], [-1, 1], [1, -1], [1, -1]]) {\n            const x = xy[0] + e[0];\n            const y = xy[1] + e[1];\n            if (x >= 1 && x <= this.BOARD_SIZE && y >= 1 && y <= this.BOARD_SIZE) {\n                result.push(this.xyToPoint(x, y));\n            }\n        }\n        return result;\n    }\n\n    canEscape(string) {\n        if (string.liberties.length > 1) { // アタリじゃない\n            return true;\n        }\n        for (const o of string.opponents) { // 相手の石を取って逃げる\n            const os = this.stringAt(o);\n            if (os.liberties.length === 1) { // アタリの石\n                const escape = this.play(os.liberties[0]);\n                if (!escape) { // 着手禁止\n                    continue;\n                }\n                const ss = this.stringAt(string.points[0]); // stringの更新\n                if (ss.liberties.length === 2) { // 取ってもまだシチョウ\n                    for (const o of ss.liberties) {\n                        const tryToCapture = this.play(o);\n                        if (!tryToCapture) {\n                            continue;\n                        }\n                        const result = this.canEscape(this.stringAt(ss.points[0]));\n                        this.undoPlay(tryToCapture);\n                        if (!result) {\n                            this.undoPlay(escape);\n                            return false;\n                        }\n                    }\n                    this.undoPlay(escape);\n                    return true;\n                } else {\n                    this.undoPlay(escape);\n                    return ss.liberties.length > 2;\n                }\n            }\n        }\n        const escape = this.play(string.liberties[0]);\n        if (!escape) {\n            return false;\n        }\n        if (escape.string.liberties.length === 2) {\n            for (const o of escape.string.liberties) {\n                const tryToCapture = this.play(o);\n                if (!tryToCapture) {\n                    continue;\n                }\n                const ss = this.stringAt(string.points[0]);\n                const result = this.canEscape(ss);\n                this.undoPlay(tryToCapture);\n                if (!result) {\n                    this.undoPlay(escape);\n                    return false;\n                }\n            }\n            this.undoPlay(escape);\n            return true;\n        } else {\n            this.undoPlay(escape);\n            return escape.string.liberties.length !== 1;\n        }\n    }\n\n    likeEye(point) {\n        if (this.getState(point) !== EMPTY) {\n            return false;\n        }\n        const adjacencies = this.adjacenciesAt(point);\n        if (!adjacencies.every(p => this.getState(p) === this.turn)) {\n            return false;\n        }\n        return adjacencies.every(p => this.stringAt(p).liberties.length > 1);\n    }\n\n    isEyeOfTurn(point, stack=[]) {\n        if (!this.likeEye(point)) {\n            return false;\n        }\n        let numBadDiagonal = 0;\n        const allowableBadDiagonal = this.adjacenciesAt(point).length === 4 ? 1 : 0;\n\n        const opponent = opponentOf(this.turn);\n        for (const d of this.diagonalsAt(point)) {\n            if (this.getState(d) === opponent) {\n                numBadDiagonal += 1;\n            } else if (this.getState(d) === EMPTY && stack.indexOf(d) < 0) {\n                stack.push(point);\n                if (!this.isEyeOfTurn(d, stack)) {\n                    numBadDiagonal += 1;\n                }\n                stack.pop();\n            }\n            if (numBadDiagonal > allowableBadDiagonal) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    isFalseEye(point) {\n        return this.likeEye(point) && !this.isEyeOfTurn(point);\n    }\n\n    toString() {\n        let string ='';\n        for (let y = 1; y <= this.BOARD_SIZE; y++) {\n            for (let x = 1; x <= this.BOARD_SIZE; x++) {\n                switch (this.getState(this.xyToPoint(x, y))) {\n                    case EMPTY:\n                        string += '.';\n                        break;\n                    case BLACK:\n                        string += 'X';\n                        break;\n                    case WHITE:\n                        string += 'O';\n                        break;\n                    default:\n                }\n            }\n            string += '\\n';\n        }\n        return string;\n    }\n}\n\nclass GoString {\n    constructor() {\n        this.points = [];\n        this.liberties = [];\n        this.opponents = [];\n    }\n}\n\nexport default GoPosition;","/**\n * @preserve Copyright 2019 ICHIKAWA, Yuji (New 3 Rs)\n */\n\nclass Gtp {\n    constructor() {\n        this.inputDom = document.getElementById(\"input\");\n        this.outputDom = document.getElementById(\"output\");\n        this.outputDom.addEventListener(\"message\", event => {\n            this.process(event.currentTarget.value);\n            event.currentTarget.value = \"\";\n        }, false);\n    }\n    _command(str) {\n        this.inputDom.command.value = str;\n        // submitメソッドはイベントハンドラを走らせない。\n        this.inputDom.dispatchEvent(new CustomEvent('submit'));\n    }\n    command(str) {\n        return new Promise((res, rej) => {\n            if (this.inputDom.command.getAttribute(\"disabled\") != null) {\n                return;\n            }\n            this.LzAnalyzeHandler = null;\n            this.resolve = res;\n            this.reject = rej;\n            this._command(str);\n        });\n    }\n    lzAnalyze(interval, handler) {\n        if (this.inputDom.command.getAttribute(\"disabled\") != null) {\n            return;\n        }\n        this.LzAnalyzeHandler = handler;\n        this._command(`lz-analyze ${interval}`);\n    }\n    kataAnalyze(interval, handler) {\n        if (this.inputDom.command.getAttribute(\"disabled\") != null) {\n            return;\n        }\n        this.kataAnalyzeHandler = handler;\n        this._command(`kata-analyze ${interval} ownership true`);\n    }\n    process(line) {\n        if (line.startsWith(\"=\")) {\n            if (this.resolve) {\n                this.resolve(line);\n                this.resolve = null;;\n            }\n        } else if (line.startsWith(\"?\")) {\n            if (this.reject) {\n                this.reject(line);\n                this.reject = null;;\n            }\n        }\n        if (this.LzAnalyzeHandler) {\n            this.parseLzAnalyze(line);\n        }\n        if (this.kataAnalyzeHandler) {\n            this.parseKataAnalyze(line);\n        }\n    }\n    parseLzAnalyze(line) {\n        // info move C4 visits 2 winrate 4861 prior 1307 lcb -5139 order 0 pv C4 Q17 info move Q17 visits 2 winrate 4905 prior 1098 lcb -5095 order 1 pv Q17 Q3 info move Q3 visits 2 winrate 4870 prior 1089 lcb -5130 order 2 pv Q3 Q17 info move Q4 visits 2 winrate 4934 prior 915 lcb -5066 order 3 pv Q4 Q17 info move Q16 visits 2 winrate 4940 prior 900 lcb -5060 order 4 pv Q16 Q3 info move D3 visits 0 winrate 4120 prior 853 lcb -5880 order 5 pv D3\n        const regex = /info move ([A-Z]\\d{1,2}) visits (\\d+) winrate (\\d+) prior (-?\\d+) lcb (-?\\d+) order (\\d+) pv ((:? ?[A-Z]\\d{1,2})+)/g;\n        const result = [];\n        let match;\n        while ((match = regex.exec(line)) != null) {\n            result.push({\n                move: match[1],\n                visits: parseInt(match[2]),\n                winrate: parseInt(match[3]) / 10000,\n                prior: parseInt(match[4]),\n                lcb: parseInt(match[5]),\n                orer: parseInt(match[6]),\n                pv: match[7].split(\" \")\n            });\n        }\n        this.LzAnalyzeHandler(result);\n    }\n    parseKataAnalyze(line) {\n        // info move C16 visits 56 utility -0.0194507 radius 0.00739696 winrate 0.491428 scoreMean -0.478044 scoreStdev 32.3095 prior 0.105269 lcb 0.488786 utilityLcb -0.0268477 order 0 pv C16 D3 R16 Q3 info move Q17 visits 53 utility -0.0205986 radius 0.00789271 winrate 0.490967 scoreMean -0.51843 scoreStdev 32.3086 prior 0.103317 lcb 0.488148 utilityLcb -0.0284914 order 1 pv Q17 R4 C4 D17 info move R16 visits 48 utility -0.0213819 radius 0.00722001 winrate 0.490688 scoreMean -0.558307 scoreStdev 32.284 prior 0.0935492 lcb 0.48811 utilityLcb -0.0286019 order 2 pv R16 D17 Q3 C4 info move Q3 visits 48 utility -0.02044 radius 0.00754151 winrate 0.491073 scoreMean -0.52743 scoreStdev 32.2601 prior 0.0914671 lcb 0.48838 utilityLcb -0.0279815 order 3 pv Q3 C4 C16 Q17 info move D17 visits 46 utility -0.0203694 radius 0.00863686 winrate 0.491095 scoreMean -0.523149 scoreStdev 32.3207 prior 0.0878046 lcb 0.48801 utilityLcb -0.0290062 order 4 pv D17 C4 R4 R16 info move C4 visits 45 utility -0.0197793 radius 0.00917776 winrate 0.491299 scoreMean -0.49066 scoreStdev 32.3245 prior 0.0849676 lcb 0.488021 utilityLcb -0.028957 order 5 pv C4 D17 R4 Q17 info move R4 visits 44 utility -0.0194629 radius 0.00811152 winrate 0.491457 scoreMean -0.490883 scoreStdev 32.3008 prior 0.0829457 lcb 0.488561 utilityLcb -0.0275745 order 6 pv R4 D3 D17 Q17 info move D3 visits 31 utility -0.0191221 radius 0.0111833 winrate 0.491607 scoreMean -0.48426 scoreStdev 32.3926 prior 0.0578495 lcb 0.487613 utilityLcb -0.0303054 order 7 pv D3 R16 Q3 C16 info move Q4 visits 22 utility -0.0124166 radius 0.0190799 winrate 0.494289 scoreMean -0.244886 scoreStdev 32.3341 prior 0.035389 lcb 0.487475 utilityLcb -0.0314966 order 8 pv Q4 C16 Q17 info move D16 visits 21 utility -0.011348 radius 0.0169283 winrate 0.494768 scoreMean -0.224796 scoreStdev 32.3515 prior 0.0329591 lcb 0.488722 utilityLcb -0.0282763 order 9 pv D16 R4 Q17 info move Q16 visits 20 utility -0.0146187 radius 0.0177249 winrate 0.493477 scoreMean -0.347622 scoreStdev 32.3037 prior 0.034737 lcb 0.487147 utilityLcb -0.0323436 order 10 pv Q16 R4 C4 D17 info move D4 visits 18 utility -0.0106007 radius 0.0247917 winrate 0.495063 scoreMean -0.197694 scoreStdev 32.4116 prior 0.026451 lcb 0.486209 utilityLcb -0.0353924 order 11 pv D4 D17 R16 ownership 0.0574604 0.0927184 0.0862007 0.0889222 0.0713715 0.0705342 0.0663168 0.0699454 0.0696961 0.0703135 0.0707498 0.0720875 0.0683848 0.0697193 0.0657052 0.0811097 0.0803288 0.0891219 0.0589881 0.09508 0.0887696 0.0856517 0.0567618 0.0538765 0.0454831 0.037413 0.0424316 0.0418428 0.0414332 0.0427052 0.0438007 0.0401999 0.0443078 0.04858 0.0488899 0.0744198 0.0782437 0.0795875 0.0927124 0.0970239 0.068805 0.0359063 0.027807 0.040289 0.0323884 0.0359301 0.0319725 0.0286396 0.0314628 0.0330162 0.0307161 0.0350543 0.0235283 0.020687 0.0460025 0.073326 0.0802772 0.102314 0.0730797 0.0559703 0.0428388 0.0478558 0.0374339 0.0321411 0.0350915 0.032562 0.0320581 0.0322501 0.0338105 0.0301837 0.029372 0.0364939 0.0338301 0.0170987 0.0471682 0.0860232 0.0806405 0.06963 0.0410239 0.0474705 0.0264108 0.028095 0.0277513 0.0269129 0.025512 0.0257056 0.0253849 0.0268678 0.0262896 0.0218693 0.0223549 0.0386803 0.0254255 0.0511993 0.0714695 0.0758416 0.0510583 0.039525 0.0360652 0.0254357 0.024569 0.0223601 0.0146071 0.0127407 0.0131719 0.0130609 0.0145692 0.020976 0.0232113 0.0236705 0.0341295 0.038488 0.0405238 0.0703722 0.0724104 0.0408933 0.0345678 0.033456 0.0273286 0.0214489 0.0109052 0.00227355 1.36716e-05 7.0059e-05 -0.000410544 0.00066663 0.00918381 0.0199694 0.0284545 0.0308396 0.0304586 0.0345143 0.0668094 0.072015 0.0414706 0.0365848 0.0383315 0.0287511 0.014852 0.00129122 -0.00670995 -0.0096296 -0.00890338 -0.009229 -0.00681303 0.00073803 0.0125068 0.0282436 0.033793 0.0327075 0.0415581 0.0722434 0.0677752 0.0390562 0.0333236 0.0353017 0.0260784 0.0115204 -0.0021702 -0.0113931 -0.0153548 -0.0147816 -0.014332 -0.0103502 -0.00193408 0.0102372 0.0246196 0.0313203 0.0286652 0.0404499 0.071719 0.0652687 0.0371737 0.0271852 0.0320029 0.0244574 0.0101729 -0.00306306 -0.0122747 -0.0168854 -0.0162893 -0.0162496 -0.0113587 -0.00237764 0.00981343 0.0236747 0.0300972 0.0250575 0.0373618 0.071067 0.0634167 0.0371166 0.0251066 0.0275254 0.0212085 0.00748802 -0.00544358 -0.0136066 -0.0178959 -0.0181945 -0.0177597 -0.0128457 -0.00337375 0.00914089 0.0226917 0.0299255 0.0269413 0.0340216 0.0690287 0.0610828 0.0350292 0.0234277 0.0245448 0.0195385 0.00625186 -0.00509413 -0.011918 -0.0136773 -0.0126529 -0.0125938 -0.00954261 -0.00163155 0.0104468 0.0230677 0.0297651 0.0248561 0.0325079 0.0667663 0.0530989 0.0241485 0.0167402 0.0170874 0.0144973 0.0102617 0.00225149 -0.00486142 -0.00583227 -0.00427596 -0.00443261 -0.00260952 0.00667355 0.0165172 0.0215436 0.0231393 0.0177754 0.0248205 0.0616455 0.0496837 0.0235134 0.0107289 0.0131149 0.00576788 0.0106886 0.0100019 0.00467538 0.00352945 0.00487139 0.00469349 0.00734111 0.014891 0.0163271 0.0148882 0.0227564 0.0179868 0.0292976 0.0605091 0.0454176 0.0215302 -0.00957254 0.00772825 0.00449392 0.00775453 0.013559 0.0158508 0.0147453 0.0162791 0.0170412 0.0195928 0.0195486 0.0157745 0.0127525 0.0227294 0.0123397 0.0336789 0.0560846 0.0524011 0.00537971 -0.0367772 0.0201121 0.00255268 0.00633342 0.0112068 0.0194867 0.0195896 0.0213024 0.021994 0.0238675 0.0197127 0.0185881 0.0267457 0.0271527 0.00493118 0.0321386 0.0680206 0.0320382 0.0248312 -0.0121598 -0.0560937 -0.016586 0.0033388 0.010258 0.0191786 0.0191341 0.0169894 0.0206722 0.0221256 0.0157605 0.0197785 0.0122782 -0.00640326 0.0215207 0.0570617 0.0569199 0.0235893 0.0244588 0.0171742 -0.00940123 0.00497656 0.0136249 0.0109796 0.0211825 0.0241471 0.0261304 0.0284791 0.0278052 0.0240433 0.0307363 0.0356951 0.0270279 0.0523358 0.0552047 0.0552847 -0.00718682 0.0239468 0.0142311 0.0338551 0.0278807 0.0416977 0.0494086 0.0593436 0.0604753 0.0625834 0.0626572 0.0633467 0.0566236 0.0559152 0.0495887 0.0620285 0.051852 0.0538323 0.0218319\n        const regex = /info move ([A-Z]\\d{1,2}) visits (\\d+) utility (-?\\d+\\.\\d+(?:e-?\\d+)?) radius (-?\\d+\\.\\d+(?:e-?\\d+)?) winrate (-?\\d+\\.\\d+(?:e-?\\d+)?) scoreMean (-?\\d+\\.\\d+(?:e-?\\d+)?) scoreStdev (-?\\d+\\.\\d+(?:e-?\\d+)?) prior (-?\\d+\\.\\d+(?:e-?\\d+)?) lcb (-?\\d+\\.\\d+(?:e-?\\d+)?) utilityLcb (-?\\d+\\.\\d+(?:e-?\\d+)?) order (-?\\d+) pv ((?: ?[A-Z]\\d{1,2})+)/g;\n        const result = {\n            info: [],\n            ownership: []\n         };\n        let match;\n        while ((match = regex.exec(line)) != null) {\n            result.info.push({\n                move: match[1],\n                visits: parseInt(match[2]),\n                utility: parseFloat(match[3]),\n                radius: parseFloat(match[4]),\n                winrate: parseFloat(match[5]),\n                scoreMean: parseFloat(match[6]),\n                scoreStdev: parseFloat(match[7]),\n                prior: parseFloat(match[8]),\n                lcb: parseFloat(match[9]),\n                utilibyLcb: parseFloat(match[10]),\n                order: parseInt(match[11]),\n                pv: match[12].split(\" \")\n            });\n        }\n        if ((match = line.match(/ownership((?: -?\\d+\\.\\d+(?:e-?\\d+)?)+)/)) != null) {\n            result.ownership = match[1].trim().split(\" \");\n        };\n        this.kataAnalyzeHandler(result);\n    }\n}\n\nexport default Gtp;","/**\n * @preserve Copyright 2019 ICHIKAWA, Yuji (New 3 Rs)\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SituationBar from './SituationBar';\nimport GoBoard, { GoIntersectionState } from './GoBoard';\nimport GoPosition, { BLACK, WHITE, opponentOf } from './GoPosition';\nimport Gtp from \"./Gtp.js\";\n\nfunction coord2xy(coord) {\n    const c = coord.charCodeAt(0);\n    const x = (c < \"I\".charCodeAt(0) ? c + 1 : c) - \"A\".charCodeAt(0);\n    return [x, parseInt(coord.slice(1))];\n}\n\nfunction xy2coord(x, y) {\n    const COORD = [\"@\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\"];\n    return COORD[x] + y;\n}\n\n/* accepts parameters\n * h  Object = {h:x, s:y, v:z}\n * OR \n * h, s, v\n*/\nfunction HSVtoRGB(h, s, v) {\n    let r, g, b, i, f, p, q, t;\n    if (arguments.length === 1) {\n        s = h.s;\n        v = h.v;\n        h = h.h;\n    }\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n        case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n        case 1: r = q;\n        g = v;\n        b = p;\n        break;\n        case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n        case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n        case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n        case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n        default:\n        break;\n    }\n    return {\n        r: Math.round(r * 255),\n        g: Math.round(g * 255),\n        b: Math.round(b * 255)\n    };\n}\n\n/* accepts parameters\n * r  Object = {r:x, g:y, b:z}\n * OR \n * r, g, b\n*/\nfunction RGBtoHSV(r, g, b) {\n    if (arguments.length === 1) {\n        g = r.g;\n        b = r.b;\n        r = r.r;\n    }\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let d = max - min;\n    let h;\n    let s = (max === 0 ? 0 : d / max);\n    let v = max / 255;\n\n    switch (max) {\n        case min:\n        h = 0;\n        break;\n        case r:\n        h = (g - b) + d * (g < b ? 6: 0);\n        h /= 6 * d;\n        break;\n        case g:\n        h = (b - r) + d * 2;\n        h /= 6 * d;\n        break;\n        case b:\n        h = (r - g) + d * 4;\n        h /= 6 * d;\n        break;\n        default:\n        break;\n    }\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\nfunction darker(r, g, b) {\n    const ratio = 0.7;\n    if (arguments.length === 1) {\n        r = r.r;\n        g = r.g;\n        b = r.b;\n    }\n    return {\n        r: r * ratio,\n        g: g * ratio,\n        b: b * ratio,\n    }\n}\n\n\nfunction board2intersections(board) {\n    const intersections = new Array(board.BOARD_SIZE2);\n    for (let i = 0; i < intersections.length; i++) {\n        const intersection  = new GoIntersectionState();\n        switch (board.getState(i)) {\n            case BLACK:\n            intersection.stone = \"B\";\n            break;\n            case WHITE:\n            intersection.stone = \"W\";\n            break;\n            default:\n        }\n        intersections[i] = intersection;\n    }\n    return intersections;\n}\n\nclass GoBoardController {\n    constructor() {\n        this.size = 19;\n        this.byoyomi = 3;\n        this.gtp = new Gtp();\n        this.model = new GoPosition(this.size, 0);\n        this.candidates = [];\n        this.candidate = null;\n        this.info = {\n            percent: 50,\n        };\n        const intersections = board2intersections(this.model);\n        this.render(intersections);\n    }\n    \n    lzAnalyze() {\n        this.gtp.lzAnalyze(100, result => {\n            this.candidates = result;\n            let intersections;\n            if (this.candidate) {\n                intersections = this.variationIntersections();\n            } else {\n                intersections = board2intersections(this.model);\n                this.addCandidatesInfo(intersections, result);\n            }\n            const blackWinrate = (this.model.turn === BLACK ? result.winrate : 1 - result.winrate) * 100;\n            this.info.percent = blackWinrate;\n            this.info.black = `${blackWinrate.toFixed(1)}%`;\n            this.info.white = `${(100 - blackWinrate).toFixed(1)}%`;\n            if (intersections) {\n                this.render(intersections);\n            }\n        });\n    }\n\n    kataAnalyze() {\n        this.gtp.kataAnalyze(100, result => {\n            if (result.info.length === 0) {\n                return;\n            }\n            this.candidates = result.info;\n            let intersections;\n            if (this.candidate) {\n                intersections = this.variationIntersections();\n            } else {\n                intersections = board2intersections(this.model);\n                this.addCandidatesInfo(intersections, result.info);\n                this.addOwnership(intersections, result.ownership);\n            }\n            const first = result.info[0];\n            const blackWinrate = (this.model.turn === BLACK ? first.winrate : 1.0 - first.winrate) * 100;\n            const blackScore = (this.model.turn === BLACK ? first.scoreMean : 1.0 - first.scoreMean).toFixed(1);\n            this.info.percent = blackWinrate;\n            if (blackWinrate >= 50) {\n                this.info.black = `${blackWinrate.toFixed(1)}%(${blackScore})`;\n                this.info.white = `${(100 - blackWinrate).toFixed(1)}%`;\n            } else {\n                this.info.black = `${blackWinrate.toFixed(1)}%`;\n                this.info.white = `${(100 - blackWinrate).toFixed(1)}%(${-blackScore})`;\n            }\n            if (intersections) {\n                this.render(intersections);\n            }\n        });\n    }\n\n    async play(x, y) {\n        try {\n            this.model.play(this.model.xyToPoint(x, y));\n            this.render(board2intersections(this.model));\n            await this.gtp.command(`play ${this.model.turn === BLACK ? \"black\" : \"white\"} ${xy2coord(x, y)}`);\n            this.kataAnalyze();\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    onMouseEnterIntersection(x, y) {\n        const coord = xy2coord(x, y);\n        if (this.candidates.map(e => e.move).includes(coord)) {\n            this.candidate = coord;\n            const intersections = this.variationIntersections();\n            this.render(intersections);\n        }\n    }\n\n    onMouseLeaveIntersection(x, y) {\n        if (this.candidate) {\n            this.candidate = null;\n            const intersections = board2intersections(this.model);\n            this.addCandidatesInfo(intersections, this.candidates);\n            this.render(intersections);\n        }\n    }\n\n    render(intersections) {\n        const size = \"500px\";\n        ReactDOM.render(\n        <div>\n            <SituationBar\n                width={size}\n                blackPercent={this.info.percent}\n                blackInfo={this.info.black}\n                whiteInfo={this.info.white}\n            />\n            <GoBoard\n                width={size}\n                height={size}\n                w={this.size}\n                h={this.size}\n                intersections={intersections}\n                onClickIntersection={(x, y) => this.play(x, y)}\n                onMouseEnterIntersection={(x, y) => this.onMouseEnterIntersection(x, y)}\n                onMouseLeaveIntersection={(x, y) => this.onMouseLeaveIntersection(x, y)}\n            />\n        </div>\n        , document.getElementById('root'));\n    }\n\n    addCandidatesInfo(intersections, candidates) {\n        const maxPlayouts = Math.max(...candidates.map(e => e.visits));\n        const maxWinrate = Math.max(...candidates.map(e => e.winrate));\n        const saturation = 0.75;\n        const brightness = 0.85;\n        const maxAlpha = 240;\n        const minAlpha = 32;\n        const hueFactor = 3.0;\n        const alphaFactor = 5.0;\n        const greenHue = RGBtoHSV(0, 255, 0).h;\n        const cyanHue = RGBtoHSV(0, 255, 255).h;\n        for (const [i, candidate] of candidates.entries()) {\n            const intersection = intersections[this.model.xyToPoint.apply(this.model, coord2xy(candidate.move))];\n            intersection.winrate = (candidate.winrate * 100).toFixed(1);\n            intersection.playouts = candidate.visits;\n    \n            const percentPlayouts = intersection.playouts / maxPlayouts;\n            const logPlayouts = Math.log(percentPlayouts);\n            const hue = i === 0 ?  cyanHue : greenHue * Math.max(0, logPlayouts / hueFactor + 1);\n            const alpha = ((minAlpha + (maxAlpha - minAlpha) * Math.max(0, logPlayouts / alphaFactor + 1))) / 255;\n            const color = HSVtoRGB(hue, saturation, brightness);\n            if (i === 0) {\n                if (candidate.winrate < maxWinrate) {\n                    intersection.borderWidth = \"2px\";\n                    intersection.borderCoor = \"red\";\n                } else {\n                    intersection.borderWidth = \"1px\";\n                    const c = darker(color);\n                    intersection.borderCoor = `rgba(${c.r},${c.g},${c.b},${alpha})`;\n                }\n            } else if (intersection.winrate === maxWinrate) {\n                intersection.borderWidth = \"2px\";\n                intersection.borderCoor = \"blue\";\n            }\n            intersection.fillColor = `rgba(${color.r},${color.g},${color.b},${alpha})`;\n        }\n    }\n    \n    variationIntersections() {\n        const info = this.candidates.find(e => e.move === this.candidate);\n        if (!info) {\n            return null;\n        }\n        const position = GoPosition.copy(this.model);\n        for (const move of info.pv) {\n            position.play(position.xyToPoint.apply(position, coord2xy(move)));\n        }\n        const intersections = board2intersections(position);\n        let turn = this.model.turn;\n        const first = intersections[position.xyToPoint.apply(position, coord2xy(info.pv[0]))];\n        first.winrate = info.winrate.toFixed(1);\n        first.playouts = info.visits;\n        first.textColor = turn === BLACK ? \"white\" : \"black\";\n        let number = 2;\n        turn = opponentOf(turn);\n        for (const move of info.pv.slice(1)) {\n            const intersection = intersections[position.xyToPoint.apply(position, coord2xy(move))]\n            intersection.number = number;\n            intersection.textColor = turn === BLACK ? \"white\" : \"black\";\n            turn = opponentOf(turn);\n            number++;\n        }\n        return intersections;\n    }\n\n    addOwnership(intersections, ownership) {\n        if (this.model.turn === BLACK) {\n            for (const [i, value] of ownership.entries()) {\n                if (i >= this.model.BOARD_SIZE2) {\n                    break;\n                }\n                const [x, y] = this.model.pointToXy(i);\n                const intersection = intersections[this.model.BOARD_SIZE * (this.model.BOARD_SIZE - y) + (x - 1)];\n                intersection.backgroundColor = value > 0.0 ? `rgba(0,0,0,${value})` : `rgba(255,255,255,${-value})`;\n            }\n        } else {\n            for (const [i, value] of ownership.entries()) {\n                if (i >= this.model.BOARD_SIZE2) {\n                    break;\n                }\n                const [x, y] = this.model.pointToXy(i);\n                const intersection = intersections[this.model.BOARD_SIZE * (this.model.BOARD_SIZE - y) + (x - 1)];\n                intersection.backgroundColor = value < 0.0 ? `rgba(0,0,0,${-value})` : `rgba(255,255,255,${value})`;\n            }\n        }\n    }\n}\n\nexport default GoBoardController;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * @preserve Copyright 2019 ICHIKAWA, Yuji (New 3 Rs)\n */\n\nimport './index.css';\nimport GoBoardController from './GoBoardController';\nimport * as serviceWorker from './serviceWorker';\n\nif (typeof SharedArrayBuffer !== \"undefined\") {\n    window.goBoardController = new GoBoardController();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}